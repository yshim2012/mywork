//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.CompactFramework.Design.Data 2.0.50727.5485 版自动生成。
// 
namespace ClientForward.WebReference {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LdvRfWebServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseEntityOfLocItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseEntityOfVPhrSecUsr))]
    public partial class LdvRfWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public LdvRfWebService() {
            this.Url = "http://192.168.0.107/LDV-RF-Services/LdvRfWebService.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VPhrSecUsr Login(string LoginName, string pwd) {
            object[] results = this.Invoke("Login", new object[] {
                        LoginName,
                        pwd});
            return ((VPhrSecUsr)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(string LoginName, string pwd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Login", new object[] {
                        LoginName,
                        pwd}, callback, asyncState);
        }
        
        /// <remarks/>
        public VPhrSecUsr EndLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VPhrSecUsr)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserAll() {
            object[] results = this.Invoke("GetUserAll", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserAll(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserAll", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetUserAll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRcvDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRcvDoc() {
            object[] results = this.Invoke("GetRcvDoc", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRcvDoc(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRcvDoc", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetRcvDoc(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPickDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPickDoc() {
            object[] results = this.Invoke("GetPickDoc", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickDoc(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickDoc", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetPickDoc(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserOrder(string orderNum) {
            object[] results = this.Invoke("GetUserOrder", new object[] {
                        orderNum});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserOrder(string orderNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserOrder", new object[] {
                        orderNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetUserOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadMainDocByStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadMainDocByStatus(string Status, string UserID) {
            object[] results = this.Invoke("LoadMainDocByStatus", new object[] {
                        Status,
                        UserID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadMainDocByStatus(string Status, string UserID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadMainDocByStatus", new object[] {
                        Status,
                        UserID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndLoadMainDocByStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePQStatusByClose", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePQStatusByClose(string Status, string ItemS, string DetailID, string DOCID, int count) {
            object[] results = this.Invoke("UpdatePQStatusByClose", new object[] {
                        Status,
                        ItemS,
                        DetailID,
                        DOCID,
                        count});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePQStatusByClose(string Status, string ItemS, string DetailID, string DOCID, int count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePQStatusByClose", new object[] {
                        Status,
                        ItemS,
                        DetailID,
                        DOCID,
                        count}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdatePQStatusByClose(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadMainDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadMainDoc(string OrderNumber, double UserId) {
            object[] results = this.Invoke("LoadMainDoc", new object[] {
                        OrderNumber,
                        UserId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadMainDoc(string OrderNumber, double UserId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadMainDoc", new object[] {
                        OrderNumber,
                        UserId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndLoadMainDoc(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveOrderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveOrderDetail(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, float oldap_qty, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID, out string OutMsg) {
            object[] results = this.Invoke("SaveOrderDetail", new object[] {
                        ID,
                        ITEM_ID,
                        InCount,
                        ACTUAL_QTY,
                        EXPECTED_QTY,
                        oldap_qty,
                        LocID,
                        WhseID,
                        LotDate,
                        ISLOC,
                        SUPPLIER_ID,
                        User_ID,
                        RID});
            OutMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveOrderDetail(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, float oldap_qty, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveOrderDetail", new object[] {
                        ID,
                        ITEM_ID,
                        InCount,
                        ACTUAL_QTY,
                        EXPECTED_QTY,
                        oldap_qty,
                        LocID,
                        WhseID,
                        LotDate,
                        ISLOC,
                        SUPPLIER_ID,
                        User_ID,
                        RID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSaveOrderDetail(System.IAsyncResult asyncResult, out string OutMsg) {
            object[] results = this.EndInvoke(asyncResult);
            OutMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadMainDocRV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadMainDocRV(string OrderNumber, double UserId) {
            object[] results = this.Invoke("LoadMainDocRV", new object[] {
                        OrderNumber,
                        UserId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadMainDocRV(string OrderNumber, double UserId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadMainDocRV", new object[] {
                        OrderNumber,
                        UserId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndLoadMainDocRV(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAllReceivingRV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveAllReceivingRV(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID, out string OutMsg) {
            object[] results = this.Invoke("SaveAllReceivingRV", new object[] {
                        ID,
                        ITEM_ID,
                        InCount,
                        ACTUAL_QTY,
                        EXPECTED_QTY,
                        LocID,
                        WhseID,
                        LotDate,
                        ISLOC,
                        SUPPLIER_ID,
                        User_ID,
                        RID});
            OutMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveAllReceivingRV(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveAllReceivingRV", new object[] {
                        ID,
                        ITEM_ID,
                        InCount,
                        ACTUAL_QTY,
                        EXPECTED_QTY,
                        LocID,
                        WhseID,
                        LotDate,
                        ISLOC,
                        SUPPLIER_ID,
                        User_ID,
                        RID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSaveAllReceivingRV(System.IAsyncResult asyncResult, out string OutMsg) {
            object[] results = this.EndInvoke(asyncResult);
            OutMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAllReceivingPQ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveAllReceivingPQ(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID, out string OutMsg) {
            object[] results = this.Invoke("SaveAllReceivingPQ", new object[] {
                        ID,
                        ITEM_ID,
                        InCount,
                        ACTUAL_QTY,
                        EXPECTED_QTY,
                        LocID,
                        WhseID,
                        LotDate,
                        ISLOC,
                        SUPPLIER_ID,
                        User_ID,
                        RID});
            OutMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveAllReceivingPQ(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveAllReceivingPQ", new object[] {
                        ID,
                        ITEM_ID,
                        InCount,
                        ACTUAL_QTY,
                        EXPECTED_QTY,
                        LocID,
                        WhseID,
                        LotDate,
                        ISLOC,
                        SUPPLIER_ID,
                        User_ID,
                        RID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSaveAllReceivingPQ(System.IAsyncResult asyncResult, out string OutMsg) {
            object[] results = this.EndInvoke(asyncResult);
            OutMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectReceivingStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectReceivingStatus(string Number_ID) {
            object[] results = this.Invoke("SelectReceivingStatus", new object[] {
                        Number_ID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectReceivingStatus(string Number_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectReceivingStatus", new object[] {
                        Number_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndSelectReceivingStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveOrderMain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveOrderMain(string Row) {
            object[] results = this.Invoke("SaveOrderMain", new object[] {
                        Row});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveOrderMain(string Row, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveOrderMain", new object[] {
                        Row}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSaveOrderMain(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUserState(double Userid, string CurrOrder, string OpState) {
            object[] results = this.Invoke("UpdateUserState", new object[] {
                        Userid,
                        CurrOrder,
                        OpState});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateUserState(double Userid, string CurrOrder, string OpState, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateUserState", new object[] {
                        Userid,
                        CurrOrder,
                        OpState}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateUserState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUserLoginOtherDevice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserLoginOtherDevice(string LoginName, string LoginTime) {
            object[] results = this.Invoke("IsUserLoginOtherDevice", new object[] {
                        LoginName,
                        LoginTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsUserLoginOtherDevice(string LoginName, string LoginTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsUserLoginOtherDevice", new object[] {
                        LoginName,
                        LoginTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsUserLoginOtherDevice(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePwd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePwd(double UserId, string NewPwd, out string Mess) {
            object[] results = this.Invoke("UpdatePwd", new object[] {
                        UserId,
                        NewPwd});
            Mess = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePwd(double UserId, string NewPwd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePwd", new object[] {
                        UserId,
                        NewPwd}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdatePwd(System.IAsyncResult asyncResult, out string Mess) {
            object[] results = this.EndInvoke(asyncResult);
            Mess = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectNullLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectNullLoc(string locCode, double userId) {
            object[] results = this.Invoke("SelectNullLoc", new object[] {
                        locCode,
                        userId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectNullLoc(string locCode, double userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectNullLoc", new object[] {
                        locCode,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndSelectNullLoc(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectOrder(string loginName, double userId) {
            object[] results = this.Invoke("SelectOrder", new object[] {
                        loginName,
                        userId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectOrder(string loginName, double userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectOrder", new object[] {
                        loginName,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndSelectOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderBoxList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectOrderBoxList(string orderlist, double userId, string boxNolist) {
            object[] results = this.Invoke("SelectOrderBoxList", new object[] {
                        orderlist,
                        userId,
                        boxNolist});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectOrderBoxList(string orderlist, double userId, string boxNolist, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectOrderBoxList", new object[] {
                        orderlist,
                        userId,
                        boxNolist}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndSelectOrderBoxList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderBoxInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectOrderBoxInfo(string loginName, double userId, string boxNum) {
            object[] results = this.Invoke("SelectOrderBoxInfo", new object[] {
                        loginName,
                        userId,
                        boxNum});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectOrderBoxInfo(string loginName, double userId, string boxNum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectOrderBoxInfo", new object[] {
                        loginName,
                        userId,
                        boxNum}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndSelectOrderBoxInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderBy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectOrderBy(string orderCode, string loginName, double userId) {
            object[] results = this.Invoke("SelectOrderBy", new object[] {
                        orderCode,
                        loginName,
                        userId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectOrderBy(string orderCode, string loginName, double userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectOrderBy", new object[] {
                        orderCode,
                        loginName,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndSelectOrderBy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateQty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateQty(double id, double qty) {
            object[] results = this.Invoke("UpdateQty", new object[] {
                        id,
                        qty});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateQty(double id, double qty, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateQty", new object[] {
                        id,
                        qty}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateQty(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryLocItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocItem[] QueryLocItem(string LoginName, string LoginTime, string LocCode, string PartCode) {
            object[] results = this.Invoke("QueryLocItem", new object[] {
                        LoginName,
                        LoginTime,
                        LocCode,
                        PartCode});
            return ((LocItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryLocItem(string LoginName, string LoginTime, string LocCode, string PartCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryLocItem", new object[] {
                        LoginName,
                        LoginTime,
                        LocCode,
                        PartCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public LocItem[] EndQueryLocItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LocItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPartQty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryPartQty(string LOC_CODE, string ITEM_CODE, string UserId) {
            object[] results = this.Invoke("QueryPartQty", new object[] {
                        LOC_CODE,
                        ITEM_CODE,
                        UserId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryPartQty(string LOC_CODE, string ITEM_CODE, string UserId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryPartQty", new object[] {
                        LOC_CODE,
                        ITEM_CODE,
                        UserId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndQueryPartQty(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryDetailById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryDetailById(double id) {
            object[] results = this.Invoke("QueryDetailById", new object[] {
                        id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDetailById(double id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDetailById", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndQueryDetailById(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePickQueueActStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePickQueueActStatus(double id) {
            object[] results = this.Invoke("UpdatePickQueueActStatus", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePickQueueActStatus(double id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePickQueueActStatus", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdatePickQueueActStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePickBatchStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePickBatchStatus(double id) {
            object[] results = this.Invoke("UpdatePickBatchStatus", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePickBatchStatus(double id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePickBatchStatus", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdatePickBatchStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MovLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MovLoc(string LoginName, string LoginTime, string OldLoc, string NewLoc, string PartCode, int Count, out string Mess, out string ErrType) {
            object[] results = this.Invoke("MovLoc", new object[] {
                        LoginName,
                        LoginTime,
                        OldLoc,
                        NewLoc,
                        PartCode,
                        Count});
            Mess = ((string)(results[1]));
            ErrType = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMovLoc(string LoginName, string LoginTime, string OldLoc, string NewLoc, string PartCode, int Count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MovLoc", new object[] {
                        LoginName,
                        LoginTime,
                        OldLoc,
                        NewLoc,
                        PartCode,
                        Count}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndMovLoc(System.IAsyncResult asyncResult, out string Mess, out string ErrType) {
            object[] results = this.EndInvoke(asyncResult);
            Mess = ((string)(results[1]));
            ErrType = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MovLocWithLot", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MovLocWithLot(string LoginName, string LoginTime, string OldLoc, string NewLoc, string PartCode, int Count, string lotNo, out string Mess, out string ErrType) {
            object[] results = this.Invoke("MovLocWithLot", new object[] {
                        LoginName,
                        LoginTime,
                        OldLoc,
                        NewLoc,
                        PartCode,
                        Count,
                        lotNo});
            Mess = ((string)(results[1]));
            ErrType = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMovLocWithLot(string LoginName, string LoginTime, string OldLoc, string NewLoc, string PartCode, int Count, string lotNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MovLocWithLot", new object[] {
                        LoginName,
                        LoginTime,
                        OldLoc,
                        NewLoc,
                        PartCode,
                        Count,
                        lotNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndMovLocWithLot(System.IAsyncResult asyncResult, out string Mess, out string ErrType) {
            object[] results = this.EndInvoke(asyncResult);
            Mess = ((string)(results[1]));
            ErrType = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MovePickLoc1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MovePickLoc1(string LoginName, string LoginTime, double vpaId, int Count, string NewLoc, string userId, out string Mess, out string ErrType, out double updateQty) {
            object[] results = this.Invoke("MovePickLoc1", new object[] {
                        LoginName,
                        LoginTime,
                        vpaId,
                        Count,
                        NewLoc,
                        userId});
            Mess = ((string)(results[1]));
            ErrType = ((string)(results[2]));
            updateQty = ((double)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMovePickLoc1(string LoginName, string LoginTime, double vpaId, int Count, string NewLoc, string userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MovePickLoc1", new object[] {
                        LoginName,
                        LoginTime,
                        vpaId,
                        Count,
                        NewLoc,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndMovePickLoc1(System.IAsyncResult asyncResult, out string Mess, out string ErrType, out double updateQty) {
            object[] results = this.EndInvoke(asyncResult);
            Mess = ((string)(results[1]));
            ErrType = ((string)(results[2]));
            updateQty = ((double)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Checked", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Checked(string orderNumber, string userName, double userId, double batchId) {
            object[] results = this.Invoke("Checked", new object[] {
                        orderNumber,
                        userName,
                        userId,
                        batchId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChecked(string orderNumber, string userName, double userId, double batchId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Checked", new object[] {
                        orderNumber,
                        userName,
                        userId,
                        batchId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndChecked(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStatus(string OrderNumber) {
            object[] results = this.Invoke("UpdateStatus", new object[] {
                        OrderNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateStatus(string OrderNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateStatus", new object[] {
                        OrderNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryByLocId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryByLocId(string LocCode) {
            object[] results = this.Invoke("QueryByLocId", new object[] {
                        LocCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryByLocId(string LocCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryByLocId", new object[] {
                        LocCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndQueryByLocId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPlanCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryPlanCheck(string checkCredence, string login_name, double UserId) {
            object[] results = this.Invoke("QueryPlanCheck", new object[] {
                        checkCredence,
                        login_name,
                        UserId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryPlanCheck(string checkCredence, string login_name, double UserId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryPlanCheck", new object[] {
                        checkCredence,
                        login_name,
                        UserId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndQueryPlanCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCheckDetailStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCheckDetailStatus(double id, double User_id, double qty, string state) {
            object[] results = this.Invoke("UpdateCheckDetailStatus", new object[] {
                        id,
                        User_id,
                        qty,
                        state});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateCheckDetailStatus(double id, double User_id, double qty, string state, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateCheckDetailStatus", new object[] {
                        id,
                        User_id,
                        qty,
                        state}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateCheckDetailStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateChecStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateChecStatus(double id, double User_id, string state) {
            object[] results = this.Invoke("UpdateChecStatus", new object[] {
                        id,
                        User_id,
                        state});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateChecStatus(double id, double User_id, string state, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateChecStatus", new object[] {
                        id,
                        User_id,
                        state}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateChecStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryWareHouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryWareHouse(double id) {
            object[] results = this.Invoke("QueryWareHouse", new object[] {
                        id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryWareHouse(double id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryWareHouse", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndQueryWareHouse(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetItem(string ItemCode) {
            object[] results = this.Invoke("GetItem", new object[] {
                        ItemCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItem(string ItemCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItem", new object[] {
                        ItemCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFreeCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertFreeCheck(double LocId, double ItemId, double qty, double userId) {
            object[] results = this.Invoke("InsertFreeCheck", new object[] {
                        LocId,
                        ItemId,
                        qty,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertFreeCheck(double LocId, double ItemId, double qty, double userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertFreeCheck", new object[] {
                        LocId,
                        ItemId,
                        qty,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndInsertFreeCheck(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckLoc(string LoginName, string LoginTime, string OldLoc, string partCode, int Count, out string Mess) {
            object[] results = this.Invoke("CheckLoc", new object[] {
                        LoginName,
                        LoginTime,
                        OldLoc,
                        partCode,
                        Count});
            Mess = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckLoc(string LoginName, string LoginTime, string OldLoc, string partCode, int Count, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckLoc", new object[] {
                        LoginName,
                        LoginTime,
                        OldLoc,
                        partCode,
                        Count}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckLoc(System.IAsyncResult asyncResult, out string Mess) {
            object[] results = this.EndInvoke(asyncResult);
            Mess = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadShipOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadShipOrder(string PickCode, string UserId, out string Mesg) {
            object[] results = this.Invoke("LoadShipOrder", new object[] {
                        PickCode,
                        UserId});
            Mesg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadShipOrder(string PickCode, string UserId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadShipOrder", new object[] {
                        PickCode,
                        UserId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndLoadShipOrder(System.IAsyncResult asyncResult, out string Mesg) {
            object[] results = this.EndInvoke(asyncResult);
            Mesg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckPackge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CheckPackge(string PackgCode) {
            object[] results = this.Invoke("CheckPackge", new object[] {
                        PackgCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckPackge(string PackgCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckPackge", new object[] {
                        PackgCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndCheckPackge(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PackgeCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PackgeCount(string PickTickCode, string PackgCode, double PackgeId) {
            object[] results = this.Invoke("PackgeCount", new object[] {
                        PickTickCode,
                        PackgCode,
                        PackgeId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPackgeCount(string PickTickCode, string PackgCode, double PackgeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PackgeCount", new object[] {
                        PickTickCode,
                        PackgCode,
                        PackgeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndPackgeCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PackgeCountByPickTickCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PackgeCountByPickTickCode(string PickTickCode) {
            object[] results = this.Invoke("PackgeCountByPickTickCode", new object[] {
                        PickTickCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPackgeCountByPickTickCode(string PickTickCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PackgeCountByPickTickCode", new object[] {
                        PickTickCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndPackgeCountByPickTickCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OutShipment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool OutShipment(double PackgID, double UserId, double ItemId, double OutCount, double WhseId, string WhseCode, bool isNew, string PICK_TICKET_CODE, out string Mesg) {
            object[] results = this.Invoke("OutShipment", new object[] {
                        PackgID,
                        UserId,
                        ItemId,
                        OutCount,
                        WhseId,
                        WhseCode,
                        isNew,
                        PICK_TICKET_CODE});
            Mesg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOutShipment(double PackgID, double UserId, double ItemId, double OutCount, double WhseId, string WhseCode, bool isNew, string PICK_TICKET_CODE, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OutShipment", new object[] {
                        PackgID,
                        UserId,
                        ItemId,
                        OutCount,
                        WhseId,
                        WhseCode,
                        isNew,
                        PICK_TICKET_CODE}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndOutShipment(System.IAsyncResult asyncResult, out string Mesg) {
            object[] results = this.EndInvoke(asyncResult);
            Mesg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPackege", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryPackege(string barcode, string ItemCode) {
            object[] results = this.Invoke("QueryPackege", new object[] {
                        barcode,
                        ItemCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryPackege(string barcode, string ItemCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryPackege", new object[] {
                        barcode,
                        ItemCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndQueryPackege(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPackegeOn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryPackegeOn(string barcode, string ItemCode) {
            object[] results = this.Invoke("QueryPackegeOn", new object[] {
                        barcode,
                        ItemCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryPackegeOn(string barcode, string ItemCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryPackegeOn", new object[] {
                        barcode,
                        ItemCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndQueryPackegeOn(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePackege", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePackege(double id, double PackegeId, double qty, double OldQty, double ticketDetaiId, double userId, string partCode, string oldPackege, string pick_ticket_code, out double BianQty, out double OldQty1) {
            object[] results = this.Invoke("UpdatePackege", new object[] {
                        id,
                        PackegeId,
                        qty,
                        OldQty,
                        ticketDetaiId,
                        userId,
                        partCode,
                        oldPackege,
                        pick_ticket_code});
            BianQty = ((double)(results[1]));
            OldQty1 = ((double)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePackege(double id, double PackegeId, double qty, double OldQty, double ticketDetaiId, double userId, string partCode, string oldPackege, string pick_ticket_code, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePackege", new object[] {
                        id,
                        PackegeId,
                        qty,
                        OldQty,
                        ticketDetaiId,
                        userId,
                        partCode,
                        oldPackege,
                        pick_ticket_code}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdatePackege(System.IAsyncResult asyncResult, out double BianQty, out double OldQty1) {
            object[] results = this.EndInvoke(asyncResult);
            BianQty = ((double)(results[1]));
            OldQty1 = ((double)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderPartInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectOrderPartInfo(int UserID, string item_code) {
            object[] results = this.Invoke("SelectOrderPartInfo", new object[] {
                        UserID,
                        item_code});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectOrderPartInfo(int UserID, string item_code, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectOrderPartInfo", new object[] {
                        UserID,
                        item_code}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndSelectOrderPartInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetFile(string packageNo) {
            object[] results = this.Invoke("GetFile", new object[] {
                        packageNo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFile(string packageNo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFile", new object[] {
                        packageNo}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLotByItemLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLotByItemLoc(string itemCode, string locCode) {
            object[] results = this.Invoke("GetLotByItemLoc", new object[] {
                        itemCode,
                        locCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLotByItemLoc(string itemCode, string locCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLotByItemLoc", new object[] {
                        itemCode,
                        locCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetLotByItemLoc(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfoByPartCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInfoByPartCode(string Item_Code, string User_ID) {
            object[] results = this.Invoke("GetInfoByPartCode", new object[] {
                        Item_Code,
                        User_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInfoByPartCode(string Item_Code, string User_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInfoByPartCode", new object[] {
                        Item_Code,
                        User_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetInfoByPartCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfoByPartCodeMloc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInfoByPartCodeMloc(string Item_Code, string User_ID) {
            object[] results = this.Invoke("GetInfoByPartCodeMloc", new object[] {
                        Item_Code,
                        User_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInfoByPartCodeMloc(string Item_Code, string User_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInfoByPartCodeMloc", new object[] {
                        Item_Code,
                        User_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetInfoByPartCodeMloc(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAddedDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveAddedDetail(string Item_Code, double InCount, string Item_Loc, string IsLoc, string User_ID, out string Msg) {
            object[] results = this.Invoke("SaveAddedDetail", new object[] {
                        Item_Code,
                        InCount,
                        Item_Loc,
                        IsLoc,
                        User_ID});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveAddedDetail(string Item_Code, double InCount, string Item_Loc, string IsLoc, string User_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveAddedDetail", new object[] {
                        Item_Code,
                        InCount,
                        Item_Loc,
                        IsLoc,
                        User_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSaveAddedDetail(System.IAsyncResult asyncResult, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryMovePlan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryMovePlan() {
            object[] results = this.Invoke("QueryMovePlan", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryMovePlan(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryMovePlan", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndQueryMovePlan(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryMovePlanDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryMovePlanDetail(int detailId) {
            object[] results = this.Invoke("QueryMovePlanDetail", new object[] {
                        detailId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryMovePlanDetail(int detailId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryMovePlanDetail", new object[] {
                        detailId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndQueryMovePlanDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryMovePlanDetailByPlanNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryMovePlanDetailByPlanNo(string PlanNO) {
            object[] results = this.Invoke("QueryMovePlanDetailByPlanNo", new object[] {
                        PlanNO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryMovePlanDetailByPlanNo(string PlanNO, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryMovePlanDetailByPlanNo", new object[] {
                        PlanNO}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndQueryMovePlanDetailByPlanNo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmPlanMove", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConfirmPlanMove(int planId, int detailId, int stockId, int locId, int targetId, int moveQty, string LoginName, string LoginTime, int userId, out string Mess, out string ErrType) {
            object[] results = this.Invoke("ConfirmPlanMove", new object[] {
                        planId,
                        detailId,
                        stockId,
                        locId,
                        targetId,
                        moveQty,
                        LoginName,
                        LoginTime,
                        userId});
            Mess = ((string)(results[1]));
            ErrType = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginConfirmPlanMove(int planId, int detailId, int stockId, int locId, int targetId, int moveQty, string LoginName, string LoginTime, int userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConfirmPlanMove", new object[] {
                        planId,
                        detailId,
                        stockId,
                        locId,
                        targetId,
                        moveQty,
                        LoginName,
                        LoginTime,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndConfirmPlanMove(System.IAsyncResult asyncResult, out string Mess, out string ErrType) {
            object[] results = this.EndInvoke(asyncResult);
            Mess = ((string)(results[1]));
            ErrType = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveOrderAutoPrintInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveOrderAutoPrintInfo(string OrderNo, string UserId) {
            object[] results = this.Invoke("SaveOrderAutoPrintInfo", new object[] {
                        OrderNo,
                        UserId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSaveOrderAutoPrintInfo(string OrderNo, string UserId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveOrderAutoPrintInfo", new object[] {
                        OrderNo,
                        UserId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSaveOrderAutoPrintInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMlocByPartCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMlocByPartCode(string Item_Code) {
            object[] results = this.Invoke("GetMlocByPartCode", new object[] {
                        Item_Code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMlocByPartCode(string Item_Code, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMlocByPartCode", new object[] {
                        Item_Code}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetMlocByPartCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MergePackage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MergePackage(string srcPakcageCode, string targetPackgeCode, double UserID, out string Msg) {
            object[] results = this.Invoke("MergePackage", new object[] {
                        srcPakcageCode,
                        targetPackgeCode,
                        UserID});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMergePackage(string srcPakcageCode, string targetPackgeCode, double UserID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MergePackage", new object[] {
                        srcPakcageCode,
                        targetPackgeCode,
                        UserID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndMergePackage(System.IAsyncResult asyncResult, out string Msg) {
            object[] results = this.EndInvoke(asyncResult);
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OrderList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_OrderList(string date) {
            object[] results = this.Invoke("Get_OrderList", new object[] {
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_OrderList(string date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_OrderList", new object[] {
                        date}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGet_OrderList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_PackingList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_PackingList(string date) {
            object[] results = this.Invoke("Get_PackingList", new object[] {
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_PackingList(string date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_PackingList", new object[] {
                        date}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGet_PackingList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_QRCodeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_QRCodeList(string date) {
            object[] results = this.Invoke("Get_QRCodeList", new object[] {
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_QRCodeList(string date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_QRCodeList", new object[] {
                        date}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGet_QRCodeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUserWhse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserWhse(string LOC_CODE, string User_ID) {
            object[] results = this.Invoke("IsUserWhse", new object[] {
                        LOC_CODE,
                        User_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsUserWhse(string LOC_CODE, string User_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsUserWhse", new object[] {
                        LOC_CODE,
                        User_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsUserWhse(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMainLocByPartCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMainLocByPartCode(string partCode, string userId) {
            object[] results = this.Invoke("GetMainLocByPartCode", new object[] {
                        partCode,
                        userId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMainLocByPartCode(string partCode, string userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMainLocByPartCode", new object[] {
                        partCode,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetMainLocByPartCode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class VPhrSecUsr : BaseEntityOfVPhrSecUsr {
        
        private System.Nullable<double> idField;
        
        private System.Nullable<double> iS_DISABLEDField;
        
        private System.Nullable<double> iS_SYSTEMField;
        
        private string lOGIN_NAMEField;
        
        private string eNCRYPTED_PASSWORDField;
        
        private string fIRST_NAMEField;
        
        private string lAST_NAMEField;
        
        private System.Nullable<System.DateTime> bIRTHDAYField;
        
        private System.Nullable<double> iS_FEMALEField;
        
        private System.Nullable<double> cOMPANY_IDField;
        
        private string eMAILField;
        
        private string dESCRIPTIONField;
        
        private System.Nullable<double> lOGIN_COUNTField;
        
        private System.Nullable<System.DateTime> dISABLED_TIMEField;
        
        private System.Nullable<System.DateTime> cREATED_TIMEField;
        
        private System.Nullable<System.DateTime> lAST_LOGINField;
        
        private System.Nullable<System.DateTime> lAST_MODIFIEDField;
        
        private string eXTEND_COLUMN_0Field;
        
        private string eXTEND_COLUMN_1Field;
        
        private string eXTEND_COLUMN_2Field;
        
        private string eXTEND_COLUMN_3Field;
        
        private string eXTEND_COLUMN_4Field;
        
        private string eXTEND_COLUMN_5Field;
        
        private string eXTEND_COLUMN_6Field;
        
        private string eXTEND_COLUMN_7Field;
        
        private string eXTEND_COLUMN_8Field;
        
        private string eXTEND_COLUMN_9Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> IS_DISABLED {
            get {
                return this.iS_DISABLEDField;
            }
            set {
                this.iS_DISABLEDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> IS_SYSTEM {
            get {
                return this.iS_SYSTEMField;
            }
            set {
                this.iS_SYSTEMField = value;
            }
        }
        
        /// <remarks/>
        public string LOGIN_NAME {
            get {
                return this.lOGIN_NAMEField;
            }
            set {
                this.lOGIN_NAMEField = value;
            }
        }
        
        /// <remarks/>
        public string ENCRYPTED_PASSWORD {
            get {
                return this.eNCRYPTED_PASSWORDField;
            }
            set {
                this.eNCRYPTED_PASSWORDField = value;
            }
        }
        
        /// <remarks/>
        public string FIRST_NAME {
            get {
                return this.fIRST_NAMEField;
            }
            set {
                this.fIRST_NAMEField = value;
            }
        }
        
        /// <remarks/>
        public string LAST_NAME {
            get {
                return this.lAST_NAMEField;
            }
            set {
                this.lAST_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BIRTHDAY {
            get {
                return this.bIRTHDAYField;
            }
            set {
                this.bIRTHDAYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> IS_FEMALE {
            get {
                return this.iS_FEMALEField;
            }
            set {
                this.iS_FEMALEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> COMPANY_ID {
            get {
                return this.cOMPANY_IDField;
            }
            set {
                this.cOMPANY_IDField = value;
            }
        }
        
        /// <remarks/>
        public string EMAIL {
            get {
                return this.eMAILField;
            }
            set {
                this.eMAILField = value;
            }
        }
        
        /// <remarks/>
        public string DESCRIPTION {
            get {
                return this.dESCRIPTIONField;
            }
            set {
                this.dESCRIPTIONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> LOGIN_COUNT {
            get {
                return this.lOGIN_COUNTField;
            }
            set {
                this.lOGIN_COUNTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DISABLED_TIME {
            get {
                return this.dISABLED_TIMEField;
            }
            set {
                this.dISABLED_TIMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CREATED_TIME {
            get {
                return this.cREATED_TIMEField;
            }
            set {
                this.cREATED_TIMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LAST_LOGIN {
            get {
                return this.lAST_LOGINField;
            }
            set {
                this.lAST_LOGINField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LAST_MODIFIED {
            get {
                return this.lAST_MODIFIEDField;
            }
            set {
                this.lAST_MODIFIEDField = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_0 {
            get {
                return this.eXTEND_COLUMN_0Field;
            }
            set {
                this.eXTEND_COLUMN_0Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_1 {
            get {
                return this.eXTEND_COLUMN_1Field;
            }
            set {
                this.eXTEND_COLUMN_1Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_2 {
            get {
                return this.eXTEND_COLUMN_2Field;
            }
            set {
                this.eXTEND_COLUMN_2Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_3 {
            get {
                return this.eXTEND_COLUMN_3Field;
            }
            set {
                this.eXTEND_COLUMN_3Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_4 {
            get {
                return this.eXTEND_COLUMN_4Field;
            }
            set {
                this.eXTEND_COLUMN_4Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_5 {
            get {
                return this.eXTEND_COLUMN_5Field;
            }
            set {
                this.eXTEND_COLUMN_5Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_6 {
            get {
                return this.eXTEND_COLUMN_6Field;
            }
            set {
                this.eXTEND_COLUMN_6Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_7 {
            get {
                return this.eXTEND_COLUMN_7Field;
            }
            set {
                this.eXTEND_COLUMN_7Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_8 {
            get {
                return this.eXTEND_COLUMN_8Field;
            }
            set {
                this.eXTEND_COLUMN_8Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_9 {
            get {
                return this.eXTEND_COLUMN_9Field;
            }
            set {
                this.eXTEND_COLUMN_9Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VPhrSecUsr))]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseEntityOfVPhrSecUsr {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LocItem))]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseEntityOfLocItem {
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LocItem : BaseEntityOfLocItem {
        
        private System.Nullable<double> idField;
        
        private string lOC_CODEField;
        
        private System.Nullable<double> uID_IDField;
        
        private string iTEM_CODEField;
        
        private System.Nullable<double> qTYField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string LOC_CODE {
            get {
                return this.lOC_CODEField;
            }
            set {
                this.lOC_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> UID_ID {
            get {
                return this.uID_IDField;
            }
            set {
                this.uID_IDField = value;
            }
        }
        
        /// <remarks/>
        public string ITEM_CODE {
            get {
                return this.iTEM_CODEField;
            }
            set {
                this.iTEM_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> QTY {
            get {
                return this.qTYField;
            }
            set {
                this.qTYField = value;
            }
        }
    }
}
