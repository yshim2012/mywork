//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace LDV.WMS.LED.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LdvRfWebServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseEntityOfLocItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseEntityOfVPhrSecUsr))]
    public partial class LdvRfWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRcvDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPickDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMainDocByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePQStatusByCloseOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMainDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOrderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMainDocRVOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAllReceivingRVOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAllReceivingPQOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectReceivingStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOrderMainOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserLoginOtherDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePwdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectNullLocOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOrderBoxListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOrderBoxInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOrderByOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryLocItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPartQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDetailByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePickQueueActStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePickBatchStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback MovLocOperationCompleted;
        
        private System.Threading.SendOrPostCallback MovLocWithLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback MovePickLoc1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryByLocIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPlanCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCheckDetailStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateChecStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryWareHouseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFreeCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLocOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadShipOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPackgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PackgeCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback OutShipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPackegeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPackegeOnOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePackegeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOrderPartInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLotByItemLocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoByPartCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoByPartCodeMlocOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAddedDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMovePlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMovePlanDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMovePlanDetailByPlanNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPlanMoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOrderAutoPrintInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LdvRfWebService() {
            this.Url = global::LDV.WMS.LED.Properties.Settings.Default.LDV_WMS_LED_localhost_LdvRfWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GetUserAllCompletedEventHandler GetUserAllCompleted;
        
        /// <remarks/>
        public event GetRcvDocCompletedEventHandler GetRcvDocCompleted;
        
        /// <remarks/>
        public event GetPickDocCompletedEventHandler GetPickDocCompleted;
        
        /// <remarks/>
        public event GetUserOrderCompletedEventHandler GetUserOrderCompleted;
        
        /// <remarks/>
        public event LoadMainDocByStatusCompletedEventHandler LoadMainDocByStatusCompleted;
        
        /// <remarks/>
        public event UpdatePQStatusByCloseCompletedEventHandler UpdatePQStatusByCloseCompleted;
        
        /// <remarks/>
        public event LoadMainDocCompletedEventHandler LoadMainDocCompleted;
        
        /// <remarks/>
        public event SaveOrderDetailCompletedEventHandler SaveOrderDetailCompleted;
        
        /// <remarks/>
        public event LoadMainDocRVCompletedEventHandler LoadMainDocRVCompleted;
        
        /// <remarks/>
        public event SaveAllReceivingRVCompletedEventHandler SaveAllReceivingRVCompleted;
        
        /// <remarks/>
        public event SaveAllReceivingPQCompletedEventHandler SaveAllReceivingPQCompleted;
        
        /// <remarks/>
        public event SelectReceivingStatusCompletedEventHandler SelectReceivingStatusCompleted;
        
        /// <remarks/>
        public event SaveOrderMainCompletedEventHandler SaveOrderMainCompleted;
        
        /// <remarks/>
        public event UpdateUserStateCompletedEventHandler UpdateUserStateCompleted;
        
        /// <remarks/>
        public event IsUserLoginOtherDeviceCompletedEventHandler IsUserLoginOtherDeviceCompleted;
        
        /// <remarks/>
        public event UpdatePwdCompletedEventHandler UpdatePwdCompleted;
        
        /// <remarks/>
        public event SelectNullLocCompletedEventHandler SelectNullLocCompleted;
        
        /// <remarks/>
        public event SelectOrderCompletedEventHandler SelectOrderCompleted;
        
        /// <remarks/>
        public event SelectOrderBoxListCompletedEventHandler SelectOrderBoxListCompleted;
        
        /// <remarks/>
        public event SelectOrderBoxInfoCompletedEventHandler SelectOrderBoxInfoCompleted;
        
        /// <remarks/>
        public event SelectOrderByCompletedEventHandler SelectOrderByCompleted;
        
        /// <remarks/>
        public event UpdateQtyCompletedEventHandler UpdateQtyCompleted;
        
        /// <remarks/>
        public event QueryLocItemCompletedEventHandler QueryLocItemCompleted;
        
        /// <remarks/>
        public event QueryPartQtyCompletedEventHandler QueryPartQtyCompleted;
        
        /// <remarks/>
        public event QueryDetailByIdCompletedEventHandler QueryDetailByIdCompleted;
        
        /// <remarks/>
        public event UpdatePickQueueActStatusCompletedEventHandler UpdatePickQueueActStatusCompleted;
        
        /// <remarks/>
        public event UpdatePickBatchStatusCompletedEventHandler UpdatePickBatchStatusCompleted;
        
        /// <remarks/>
        public event MovLocCompletedEventHandler MovLocCompleted;
        
        /// <remarks/>
        public event MovLocWithLotCompletedEventHandler MovLocWithLotCompleted;
        
        /// <remarks/>
        public event MovePickLoc1CompletedEventHandler MovePickLoc1Completed;
        
        /// <remarks/>
        public event CheckedCompletedEventHandler CheckedCompleted;
        
        /// <remarks/>
        public event UpdateStatusCompletedEventHandler UpdateStatusCompleted;
        
        /// <remarks/>
        public event QueryByLocIdCompletedEventHandler QueryByLocIdCompleted;
        
        /// <remarks/>
        public event QueryPlanCheckCompletedEventHandler QueryPlanCheckCompleted;
        
        /// <remarks/>
        public event UpdateCheckDetailStatusCompletedEventHandler UpdateCheckDetailStatusCompleted;
        
        /// <remarks/>
        public event UpdateChecStatusCompletedEventHandler UpdateChecStatusCompleted;
        
        /// <remarks/>
        public event QueryWareHouseCompletedEventHandler QueryWareHouseCompleted;
        
        /// <remarks/>
        public event GetItemCompletedEventHandler GetItemCompleted;
        
        /// <remarks/>
        public event InsertFreeCheckCompletedEventHandler InsertFreeCheckCompleted;
        
        /// <remarks/>
        public event CheckLocCompletedEventHandler CheckLocCompleted;
        
        /// <remarks/>
        public event LoadShipOrderCompletedEventHandler LoadShipOrderCompleted;
        
        /// <remarks/>
        public event CheckPackgeCompletedEventHandler CheckPackgeCompleted;
        
        /// <remarks/>
        public event PackgeCountCompletedEventHandler PackgeCountCompleted;
        
        /// <remarks/>
        public event OutShipmentCompletedEventHandler OutShipmentCompleted;
        
        /// <remarks/>
        public event QueryPackegeCompletedEventHandler QueryPackegeCompleted;
        
        /// <remarks/>
        public event QueryPackegeOnCompletedEventHandler QueryPackegeOnCompleted;
        
        /// <remarks/>
        public event UpdatePackegeCompletedEventHandler UpdatePackegeCompleted;
        
        /// <remarks/>
        public event SelectOrderPartInfoCompletedEventHandler SelectOrderPartInfoCompleted;
        
        /// <remarks/>
        public event GetFileCompletedEventHandler GetFileCompleted;
        
        /// <remarks/>
        public event GetLotByItemLocCompletedEventHandler GetLotByItemLocCompleted;
        
        /// <remarks/>
        public event GetInfoByPartCodeCompletedEventHandler GetInfoByPartCodeCompleted;
        
        /// <remarks/>
        public event GetInfoByPartCodeMlocCompletedEventHandler GetInfoByPartCodeMlocCompleted;
        
        /// <remarks/>
        public event SaveAddedDetailCompletedEventHandler SaveAddedDetailCompleted;
        
        /// <remarks/>
        public event QueryMovePlanCompletedEventHandler QueryMovePlanCompleted;
        
        /// <remarks/>
        public event QueryMovePlanDetailCompletedEventHandler QueryMovePlanDetailCompleted;
        
        /// <remarks/>
        public event QueryMovePlanDetailByPlanNoCompletedEventHandler QueryMovePlanDetailByPlanNoCompleted;
        
        /// <remarks/>
        public event ConfirmPlanMoveCompletedEventHandler ConfirmPlanMoveCompleted;
        
        /// <remarks/>
        public event SaveOrderAutoPrintInfoCompletedEventHandler SaveOrderAutoPrintInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VPhrSecUsr Login(string LoginName, string pwd) {
            object[] results = this.Invoke("Login", new object[] {
                        LoginName,
                        pwd});
            return ((VPhrSecUsr)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string LoginName, string pwd) {
            this.LoginAsync(LoginName, pwd, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string LoginName, string pwd, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        LoginName,
                        pwd}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserAll() {
            object[] results = this.Invoke("GetUserAll", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAllAsync() {
            this.GetUserAllAsync(null);
        }
        
        /// <remarks/>
        public void GetUserAllAsync(object userState) {
            if ((this.GetUserAllOperationCompleted == null)) {
                this.GetUserAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAllOperationCompleted);
            }
            this.InvokeAsync("GetUserAll", new object[0], this.GetUserAllOperationCompleted, userState);
        }
        
        private void OnGetUserAllOperationCompleted(object arg) {
            if ((this.GetUserAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAllCompleted(this, new GetUserAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRcvDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRcvDoc() {
            object[] results = this.Invoke("GetRcvDoc", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRcvDocAsync() {
            this.GetRcvDocAsync(null);
        }
        
        /// <remarks/>
        public void GetRcvDocAsync(object userState) {
            if ((this.GetRcvDocOperationCompleted == null)) {
                this.GetRcvDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRcvDocOperationCompleted);
            }
            this.InvokeAsync("GetRcvDoc", new object[0], this.GetRcvDocOperationCompleted, userState);
        }
        
        private void OnGetRcvDocOperationCompleted(object arg) {
            if ((this.GetRcvDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRcvDocCompleted(this, new GetRcvDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPickDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPickDoc() {
            object[] results = this.Invoke("GetPickDoc", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPickDocAsync() {
            this.GetPickDocAsync(null);
        }
        
        /// <remarks/>
        public void GetPickDocAsync(object userState) {
            if ((this.GetPickDocOperationCompleted == null)) {
                this.GetPickDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPickDocOperationCompleted);
            }
            this.InvokeAsync("GetPickDoc", new object[0], this.GetPickDocOperationCompleted, userState);
        }
        
        private void OnGetPickDocOperationCompleted(object arg) {
            if ((this.GetPickDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPickDocCompleted(this, new GetPickDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserOrder(string orderNum) {
            object[] results = this.Invoke("GetUserOrder", new object[] {
                        orderNum});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserOrderAsync(string orderNum) {
            this.GetUserOrderAsync(orderNum, null);
        }
        
        /// <remarks/>
        public void GetUserOrderAsync(string orderNum, object userState) {
            if ((this.GetUserOrderOperationCompleted == null)) {
                this.GetUserOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOrderOperationCompleted);
            }
            this.InvokeAsync("GetUserOrder", new object[] {
                        orderNum}, this.GetUserOrderOperationCompleted, userState);
        }
        
        private void OnGetUserOrderOperationCompleted(object arg) {
            if ((this.GetUserOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserOrderCompleted(this, new GetUserOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadMainDocByStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadMainDocByStatus(string Status, string UserID) {
            object[] results = this.Invoke("LoadMainDocByStatus", new object[] {
                        Status,
                        UserID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMainDocByStatusAsync(string Status, string UserID) {
            this.LoadMainDocByStatusAsync(Status, UserID, null);
        }
        
        /// <remarks/>
        public void LoadMainDocByStatusAsync(string Status, string UserID, object userState) {
            if ((this.LoadMainDocByStatusOperationCompleted == null)) {
                this.LoadMainDocByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMainDocByStatusOperationCompleted);
            }
            this.InvokeAsync("LoadMainDocByStatus", new object[] {
                        Status,
                        UserID}, this.LoadMainDocByStatusOperationCompleted, userState);
        }
        
        private void OnLoadMainDocByStatusOperationCompleted(object arg) {
            if ((this.LoadMainDocByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMainDocByStatusCompleted(this, new LoadMainDocByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePQStatusByClose", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePQStatusByClose(string Status, string ItemS, string DetailID, string DOCID, int count) {
            object[] results = this.Invoke("UpdatePQStatusByClose", new object[] {
                        Status,
                        ItemS,
                        DetailID,
                        DOCID,
                        count});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePQStatusByCloseAsync(string Status, string ItemS, string DetailID, string DOCID, int count) {
            this.UpdatePQStatusByCloseAsync(Status, ItemS, DetailID, DOCID, count, null);
        }
        
        /// <remarks/>
        public void UpdatePQStatusByCloseAsync(string Status, string ItemS, string DetailID, string DOCID, int count, object userState) {
            if ((this.UpdatePQStatusByCloseOperationCompleted == null)) {
                this.UpdatePQStatusByCloseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePQStatusByCloseOperationCompleted);
            }
            this.InvokeAsync("UpdatePQStatusByClose", new object[] {
                        Status,
                        ItemS,
                        DetailID,
                        DOCID,
                        count}, this.UpdatePQStatusByCloseOperationCompleted, userState);
        }
        
        private void OnUpdatePQStatusByCloseOperationCompleted(object arg) {
            if ((this.UpdatePQStatusByCloseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePQStatusByCloseCompleted(this, new UpdatePQStatusByCloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadMainDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadMainDoc(string OrderNumber, double UserId) {
            object[] results = this.Invoke("LoadMainDoc", new object[] {
                        OrderNumber,
                        UserId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMainDocAsync(string OrderNumber, double UserId) {
            this.LoadMainDocAsync(OrderNumber, UserId, null);
        }
        
        /// <remarks/>
        public void LoadMainDocAsync(string OrderNumber, double UserId, object userState) {
            if ((this.LoadMainDocOperationCompleted == null)) {
                this.LoadMainDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMainDocOperationCompleted);
            }
            this.InvokeAsync("LoadMainDoc", new object[] {
                        OrderNumber,
                        UserId}, this.LoadMainDocOperationCompleted, userState);
        }
        
        private void OnLoadMainDocOperationCompleted(object arg) {
            if ((this.LoadMainDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMainDocCompleted(this, new LoadMainDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveOrderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveOrderDetail(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, float oldap_qty, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID, out string OutMsg) {
            object[] results = this.Invoke("SaveOrderDetail", new object[] {
                        ID,
                        ITEM_ID,
                        InCount,
                        ACTUAL_QTY,
                        EXPECTED_QTY,
                        oldap_qty,
                        LocID,
                        WhseID,
                        LotDate,
                        ISLOC,
                        SUPPLIER_ID,
                        User_ID,
                        RID});
            OutMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveOrderDetailAsync(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, float oldap_qty, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID) {
            this.SaveOrderDetailAsync(ID, ITEM_ID, InCount, ACTUAL_QTY, EXPECTED_QTY, oldap_qty, LocID, WhseID, LotDate, ISLOC, SUPPLIER_ID, User_ID, RID, null);
        }
        
        /// <remarks/>
        public void SaveOrderDetailAsync(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, float oldap_qty, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID, object userState) {
            if ((this.SaveOrderDetailOperationCompleted == null)) {
                this.SaveOrderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOrderDetailOperationCompleted);
            }
            this.InvokeAsync("SaveOrderDetail", new object[] {
                        ID,
                        ITEM_ID,
                        InCount,
                        ACTUAL_QTY,
                        EXPECTED_QTY,
                        oldap_qty,
                        LocID,
                        WhseID,
                        LotDate,
                        ISLOC,
                        SUPPLIER_ID,
                        User_ID,
                        RID}, this.SaveOrderDetailOperationCompleted, userState);
        }
        
        private void OnSaveOrderDetailOperationCompleted(object arg) {
            if ((this.SaveOrderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveOrderDetailCompleted(this, new SaveOrderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadMainDocRV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadMainDocRV(string OrderNumber, double UserId) {
            object[] results = this.Invoke("LoadMainDocRV", new object[] {
                        OrderNumber,
                        UserId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMainDocRVAsync(string OrderNumber, double UserId) {
            this.LoadMainDocRVAsync(OrderNumber, UserId, null);
        }
        
        /// <remarks/>
        public void LoadMainDocRVAsync(string OrderNumber, double UserId, object userState) {
            if ((this.LoadMainDocRVOperationCompleted == null)) {
                this.LoadMainDocRVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMainDocRVOperationCompleted);
            }
            this.InvokeAsync("LoadMainDocRV", new object[] {
                        OrderNumber,
                        UserId}, this.LoadMainDocRVOperationCompleted, userState);
        }
        
        private void OnLoadMainDocRVOperationCompleted(object arg) {
            if ((this.LoadMainDocRVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMainDocRVCompleted(this, new LoadMainDocRVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAllReceivingRV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveAllReceivingRV(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID, out string OutMsg) {
            object[] results = this.Invoke("SaveAllReceivingRV", new object[] {
                        ID,
                        ITEM_ID,
                        InCount,
                        ACTUAL_QTY,
                        EXPECTED_QTY,
                        LocID,
                        WhseID,
                        LotDate,
                        ISLOC,
                        SUPPLIER_ID,
                        User_ID,
                        RID});
            OutMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAllReceivingRVAsync(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID) {
            this.SaveAllReceivingRVAsync(ID, ITEM_ID, InCount, ACTUAL_QTY, EXPECTED_QTY, LocID, WhseID, LotDate, ISLOC, SUPPLIER_ID, User_ID, RID, null);
        }
        
        /// <remarks/>
        public void SaveAllReceivingRVAsync(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID, object userState) {
            if ((this.SaveAllReceivingRVOperationCompleted == null)) {
                this.SaveAllReceivingRVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAllReceivingRVOperationCompleted);
            }
            this.InvokeAsync("SaveAllReceivingRV", new object[] {
                        ID,
                        ITEM_ID,
                        InCount,
                        ACTUAL_QTY,
                        EXPECTED_QTY,
                        LocID,
                        WhseID,
                        LotDate,
                        ISLOC,
                        SUPPLIER_ID,
                        User_ID,
                        RID}, this.SaveAllReceivingRVOperationCompleted, userState);
        }
        
        private void OnSaveAllReceivingRVOperationCompleted(object arg) {
            if ((this.SaveAllReceivingRVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAllReceivingRVCompleted(this, new SaveAllReceivingRVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAllReceivingPQ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveAllReceivingPQ(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID, out string OutMsg) {
            object[] results = this.Invoke("SaveAllReceivingPQ", new object[] {
                        ID,
                        ITEM_ID,
                        InCount,
                        ACTUAL_QTY,
                        EXPECTED_QTY,
                        LocID,
                        WhseID,
                        LotDate,
                        ISLOC,
                        SUPPLIER_ID,
                        User_ID,
                        RID});
            OutMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAllReceivingPQAsync(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID) {
            this.SaveAllReceivingPQAsync(ID, ITEM_ID, InCount, ACTUAL_QTY, EXPECTED_QTY, LocID, WhseID, LotDate, ISLOC, SUPPLIER_ID, User_ID, RID, null);
        }
        
        /// <remarks/>
        public void SaveAllReceivingPQAsync(string ID, string ITEM_ID, float InCount, float ACTUAL_QTY, float EXPECTED_QTY, string LocID, double WhseID, string LotDate, bool ISLOC, double SUPPLIER_ID, double User_ID, string RID, object userState) {
            if ((this.SaveAllReceivingPQOperationCompleted == null)) {
                this.SaveAllReceivingPQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAllReceivingPQOperationCompleted);
            }
            this.InvokeAsync("SaveAllReceivingPQ", new object[] {
                        ID,
                        ITEM_ID,
                        InCount,
                        ACTUAL_QTY,
                        EXPECTED_QTY,
                        LocID,
                        WhseID,
                        LotDate,
                        ISLOC,
                        SUPPLIER_ID,
                        User_ID,
                        RID}, this.SaveAllReceivingPQOperationCompleted, userState);
        }
        
        private void OnSaveAllReceivingPQOperationCompleted(object arg) {
            if ((this.SaveAllReceivingPQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAllReceivingPQCompleted(this, new SaveAllReceivingPQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectReceivingStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectReceivingStatus(string Number_ID) {
            object[] results = this.Invoke("SelectReceivingStatus", new object[] {
                        Number_ID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectReceivingStatusAsync(string Number_ID) {
            this.SelectReceivingStatusAsync(Number_ID, null);
        }
        
        /// <remarks/>
        public void SelectReceivingStatusAsync(string Number_ID, object userState) {
            if ((this.SelectReceivingStatusOperationCompleted == null)) {
                this.SelectReceivingStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectReceivingStatusOperationCompleted);
            }
            this.InvokeAsync("SelectReceivingStatus", new object[] {
                        Number_ID}, this.SelectReceivingStatusOperationCompleted, userState);
        }
        
        private void OnSelectReceivingStatusOperationCompleted(object arg) {
            if ((this.SelectReceivingStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectReceivingStatusCompleted(this, new SelectReceivingStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveOrderMain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveOrderMain(string Row) {
            object[] results = this.Invoke("SaveOrderMain", new object[] {
                        Row});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveOrderMainAsync(string Row) {
            this.SaveOrderMainAsync(Row, null);
        }
        
        /// <remarks/>
        public void SaveOrderMainAsync(string Row, object userState) {
            if ((this.SaveOrderMainOperationCompleted == null)) {
                this.SaveOrderMainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOrderMainOperationCompleted);
            }
            this.InvokeAsync("SaveOrderMain", new object[] {
                        Row}, this.SaveOrderMainOperationCompleted, userState);
        }
        
        private void OnSaveOrderMainOperationCompleted(object arg) {
            if ((this.SaveOrderMainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveOrderMainCompleted(this, new SaveOrderMainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUserState(double Userid, string CurrOrder, string OpState) {
            object[] results = this.Invoke("UpdateUserState", new object[] {
                        Userid,
                        CurrOrder,
                        OpState});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserStateAsync(double Userid, string CurrOrder, string OpState) {
            this.UpdateUserStateAsync(Userid, CurrOrder, OpState, null);
        }
        
        /// <remarks/>
        public void UpdateUserStateAsync(double Userid, string CurrOrder, string OpState, object userState) {
            if ((this.UpdateUserStateOperationCompleted == null)) {
                this.UpdateUserStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserStateOperationCompleted);
            }
            this.InvokeAsync("UpdateUserState", new object[] {
                        Userid,
                        CurrOrder,
                        OpState}, this.UpdateUserStateOperationCompleted, userState);
        }
        
        private void OnUpdateUserStateOperationCompleted(object arg) {
            if ((this.UpdateUserStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserStateCompleted(this, new UpdateUserStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUserLoginOtherDevice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserLoginOtherDevice(string LoginName, string LoginTime) {
            object[] results = this.Invoke("IsUserLoginOtherDevice", new object[] {
                        LoginName,
                        LoginTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserLoginOtherDeviceAsync(string LoginName, string LoginTime) {
            this.IsUserLoginOtherDeviceAsync(LoginName, LoginTime, null);
        }
        
        /// <remarks/>
        public void IsUserLoginOtherDeviceAsync(string LoginName, string LoginTime, object userState) {
            if ((this.IsUserLoginOtherDeviceOperationCompleted == null)) {
                this.IsUserLoginOtherDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserLoginOtherDeviceOperationCompleted);
            }
            this.InvokeAsync("IsUserLoginOtherDevice", new object[] {
                        LoginName,
                        LoginTime}, this.IsUserLoginOtherDeviceOperationCompleted, userState);
        }
        
        private void OnIsUserLoginOtherDeviceOperationCompleted(object arg) {
            if ((this.IsUserLoginOtherDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserLoginOtherDeviceCompleted(this, new IsUserLoginOtherDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePwd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePwd(double UserId, string NewPwd, out string Mess) {
            object[] results = this.Invoke("UpdatePwd", new object[] {
                        UserId,
                        NewPwd});
            Mess = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePwdAsync(double UserId, string NewPwd) {
            this.UpdatePwdAsync(UserId, NewPwd, null);
        }
        
        /// <remarks/>
        public void UpdatePwdAsync(double UserId, string NewPwd, object userState) {
            if ((this.UpdatePwdOperationCompleted == null)) {
                this.UpdatePwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePwdOperationCompleted);
            }
            this.InvokeAsync("UpdatePwd", new object[] {
                        UserId,
                        NewPwd}, this.UpdatePwdOperationCompleted, userState);
        }
        
        private void OnUpdatePwdOperationCompleted(object arg) {
            if ((this.UpdatePwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePwdCompleted(this, new UpdatePwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectNullLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectNullLoc(string locCode, double userId) {
            object[] results = this.Invoke("SelectNullLoc", new object[] {
                        locCode,
                        userId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectNullLocAsync(string locCode, double userId) {
            this.SelectNullLocAsync(locCode, userId, null);
        }
        
        /// <remarks/>
        public void SelectNullLocAsync(string locCode, double userId, object userState) {
            if ((this.SelectNullLocOperationCompleted == null)) {
                this.SelectNullLocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectNullLocOperationCompleted);
            }
            this.InvokeAsync("SelectNullLoc", new object[] {
                        locCode,
                        userId}, this.SelectNullLocOperationCompleted, userState);
        }
        
        private void OnSelectNullLocOperationCompleted(object arg) {
            if ((this.SelectNullLocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectNullLocCompleted(this, new SelectNullLocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectOrder(string loginName, double userId) {
            object[] results = this.Invoke("SelectOrder", new object[] {
                        loginName,
                        userId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectOrderAsync(string loginName, double userId) {
            this.SelectOrderAsync(loginName, userId, null);
        }
        
        /// <remarks/>
        public void SelectOrderAsync(string loginName, double userId, object userState) {
            if ((this.SelectOrderOperationCompleted == null)) {
                this.SelectOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOrderOperationCompleted);
            }
            this.InvokeAsync("SelectOrder", new object[] {
                        loginName,
                        userId}, this.SelectOrderOperationCompleted, userState);
        }
        
        private void OnSelectOrderOperationCompleted(object arg) {
            if ((this.SelectOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectOrderCompleted(this, new SelectOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderBoxList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectOrderBoxList(string orderlist, double userId, string boxNolist) {
            object[] results = this.Invoke("SelectOrderBoxList", new object[] {
                        orderlist,
                        userId,
                        boxNolist});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectOrderBoxListAsync(string orderlist, double userId, string boxNolist) {
            this.SelectOrderBoxListAsync(orderlist, userId, boxNolist, null);
        }
        
        /// <remarks/>
        public void SelectOrderBoxListAsync(string orderlist, double userId, string boxNolist, object userState) {
            if ((this.SelectOrderBoxListOperationCompleted == null)) {
                this.SelectOrderBoxListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOrderBoxListOperationCompleted);
            }
            this.InvokeAsync("SelectOrderBoxList", new object[] {
                        orderlist,
                        userId,
                        boxNolist}, this.SelectOrderBoxListOperationCompleted, userState);
        }
        
        private void OnSelectOrderBoxListOperationCompleted(object arg) {
            if ((this.SelectOrderBoxListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectOrderBoxListCompleted(this, new SelectOrderBoxListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderBoxInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectOrderBoxInfo(string loginName, double userId, string boxNum) {
            object[] results = this.Invoke("SelectOrderBoxInfo", new object[] {
                        loginName,
                        userId,
                        boxNum});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectOrderBoxInfoAsync(string loginName, double userId, string boxNum) {
            this.SelectOrderBoxInfoAsync(loginName, userId, boxNum, null);
        }
        
        /// <remarks/>
        public void SelectOrderBoxInfoAsync(string loginName, double userId, string boxNum, object userState) {
            if ((this.SelectOrderBoxInfoOperationCompleted == null)) {
                this.SelectOrderBoxInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOrderBoxInfoOperationCompleted);
            }
            this.InvokeAsync("SelectOrderBoxInfo", new object[] {
                        loginName,
                        userId,
                        boxNum}, this.SelectOrderBoxInfoOperationCompleted, userState);
        }
        
        private void OnSelectOrderBoxInfoOperationCompleted(object arg) {
            if ((this.SelectOrderBoxInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectOrderBoxInfoCompleted(this, new SelectOrderBoxInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderBy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectOrderBy(string orderCode, string loginName, double userId) {
            object[] results = this.Invoke("SelectOrderBy", new object[] {
                        orderCode,
                        loginName,
                        userId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectOrderByAsync(string orderCode, string loginName, double userId) {
            this.SelectOrderByAsync(orderCode, loginName, userId, null);
        }
        
        /// <remarks/>
        public void SelectOrderByAsync(string orderCode, string loginName, double userId, object userState) {
            if ((this.SelectOrderByOperationCompleted == null)) {
                this.SelectOrderByOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOrderByOperationCompleted);
            }
            this.InvokeAsync("SelectOrderBy", new object[] {
                        orderCode,
                        loginName,
                        userId}, this.SelectOrderByOperationCompleted, userState);
        }
        
        private void OnSelectOrderByOperationCompleted(object arg) {
            if ((this.SelectOrderByCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectOrderByCompleted(this, new SelectOrderByCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateQty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateQty(double id, double qty) {
            object[] results = this.Invoke("UpdateQty", new object[] {
                        id,
                        qty});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQtyAsync(double id, double qty) {
            this.UpdateQtyAsync(id, qty, null);
        }
        
        /// <remarks/>
        public void UpdateQtyAsync(double id, double qty, object userState) {
            if ((this.UpdateQtyOperationCompleted == null)) {
                this.UpdateQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQtyOperationCompleted);
            }
            this.InvokeAsync("UpdateQty", new object[] {
                        id,
                        qty}, this.UpdateQtyOperationCompleted, userState);
        }
        
        private void OnUpdateQtyOperationCompleted(object arg) {
            if ((this.UpdateQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQtyCompleted(this, new UpdateQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryLocItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocItem[] QueryLocItem(string LoginName, string LoginTime, string LocCode, string PartCode) {
            object[] results = this.Invoke("QueryLocItem", new object[] {
                        LoginName,
                        LoginTime,
                        LocCode,
                        PartCode});
            return ((LocItem[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryLocItemAsync(string LoginName, string LoginTime, string LocCode, string PartCode) {
            this.QueryLocItemAsync(LoginName, LoginTime, LocCode, PartCode, null);
        }
        
        /// <remarks/>
        public void QueryLocItemAsync(string LoginName, string LoginTime, string LocCode, string PartCode, object userState) {
            if ((this.QueryLocItemOperationCompleted == null)) {
                this.QueryLocItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryLocItemOperationCompleted);
            }
            this.InvokeAsync("QueryLocItem", new object[] {
                        LoginName,
                        LoginTime,
                        LocCode,
                        PartCode}, this.QueryLocItemOperationCompleted, userState);
        }
        
        private void OnQueryLocItemOperationCompleted(object arg) {
            if ((this.QueryLocItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryLocItemCompleted(this, new QueryLocItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPartQty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryPartQty(string LOC_CODE, string ITEM_CODE, string UserId) {
            object[] results = this.Invoke("QueryPartQty", new object[] {
                        LOC_CODE,
                        ITEM_CODE,
                        UserId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPartQtyAsync(string LOC_CODE, string ITEM_CODE, string UserId) {
            this.QueryPartQtyAsync(LOC_CODE, ITEM_CODE, UserId, null);
        }
        
        /// <remarks/>
        public void QueryPartQtyAsync(string LOC_CODE, string ITEM_CODE, string UserId, object userState) {
            if ((this.QueryPartQtyOperationCompleted == null)) {
                this.QueryPartQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPartQtyOperationCompleted);
            }
            this.InvokeAsync("QueryPartQty", new object[] {
                        LOC_CODE,
                        ITEM_CODE,
                        UserId}, this.QueryPartQtyOperationCompleted, userState);
        }
        
        private void OnQueryPartQtyOperationCompleted(object arg) {
            if ((this.QueryPartQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPartQtyCompleted(this, new QueryPartQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryDetailById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryDetailById(double id) {
            object[] results = this.Invoke("QueryDetailById", new object[] {
                        id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDetailByIdAsync(double id) {
            this.QueryDetailByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void QueryDetailByIdAsync(double id, object userState) {
            if ((this.QueryDetailByIdOperationCompleted == null)) {
                this.QueryDetailByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDetailByIdOperationCompleted);
            }
            this.InvokeAsync("QueryDetailById", new object[] {
                        id}, this.QueryDetailByIdOperationCompleted, userState);
        }
        
        private void OnQueryDetailByIdOperationCompleted(object arg) {
            if ((this.QueryDetailByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDetailByIdCompleted(this, new QueryDetailByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePickQueueActStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePickQueueActStatus(double id) {
            object[] results = this.Invoke("UpdatePickQueueActStatus", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePickQueueActStatusAsync(double id) {
            this.UpdatePickQueueActStatusAsync(id, null);
        }
        
        /// <remarks/>
        public void UpdatePickQueueActStatusAsync(double id, object userState) {
            if ((this.UpdatePickQueueActStatusOperationCompleted == null)) {
                this.UpdatePickQueueActStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePickQueueActStatusOperationCompleted);
            }
            this.InvokeAsync("UpdatePickQueueActStatus", new object[] {
                        id}, this.UpdatePickQueueActStatusOperationCompleted, userState);
        }
        
        private void OnUpdatePickQueueActStatusOperationCompleted(object arg) {
            if ((this.UpdatePickQueueActStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePickQueueActStatusCompleted(this, new UpdatePickQueueActStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePickBatchStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePickBatchStatus(double id) {
            object[] results = this.Invoke("UpdatePickBatchStatus", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePickBatchStatusAsync(double id) {
            this.UpdatePickBatchStatusAsync(id, null);
        }
        
        /// <remarks/>
        public void UpdatePickBatchStatusAsync(double id, object userState) {
            if ((this.UpdatePickBatchStatusOperationCompleted == null)) {
                this.UpdatePickBatchStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePickBatchStatusOperationCompleted);
            }
            this.InvokeAsync("UpdatePickBatchStatus", new object[] {
                        id}, this.UpdatePickBatchStatusOperationCompleted, userState);
        }
        
        private void OnUpdatePickBatchStatusOperationCompleted(object arg) {
            if ((this.UpdatePickBatchStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePickBatchStatusCompleted(this, new UpdatePickBatchStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MovLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MovLoc(string LoginName, string LoginTime, string OldLoc, string NewLoc, string PartCode, int Count, out string Mess, out string ErrType) {
            object[] results = this.Invoke("MovLoc", new object[] {
                        LoginName,
                        LoginTime,
                        OldLoc,
                        NewLoc,
                        PartCode,
                        Count});
            Mess = ((string)(results[1]));
            ErrType = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MovLocAsync(string LoginName, string LoginTime, string OldLoc, string NewLoc, string PartCode, int Count) {
            this.MovLocAsync(LoginName, LoginTime, OldLoc, NewLoc, PartCode, Count, null);
        }
        
        /// <remarks/>
        public void MovLocAsync(string LoginName, string LoginTime, string OldLoc, string NewLoc, string PartCode, int Count, object userState) {
            if ((this.MovLocOperationCompleted == null)) {
                this.MovLocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMovLocOperationCompleted);
            }
            this.InvokeAsync("MovLoc", new object[] {
                        LoginName,
                        LoginTime,
                        OldLoc,
                        NewLoc,
                        PartCode,
                        Count}, this.MovLocOperationCompleted, userState);
        }
        
        private void OnMovLocOperationCompleted(object arg) {
            if ((this.MovLocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MovLocCompleted(this, new MovLocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MovLocWithLot", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MovLocWithLot(string LoginName, string LoginTime, string OldLoc, string NewLoc, string PartCode, int Count, string lotNo, out string Mess, out string ErrType) {
            object[] results = this.Invoke("MovLocWithLot", new object[] {
                        LoginName,
                        LoginTime,
                        OldLoc,
                        NewLoc,
                        PartCode,
                        Count,
                        lotNo});
            Mess = ((string)(results[1]));
            ErrType = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MovLocWithLotAsync(string LoginName, string LoginTime, string OldLoc, string NewLoc, string PartCode, int Count, string lotNo) {
            this.MovLocWithLotAsync(LoginName, LoginTime, OldLoc, NewLoc, PartCode, Count, lotNo, null);
        }
        
        /// <remarks/>
        public void MovLocWithLotAsync(string LoginName, string LoginTime, string OldLoc, string NewLoc, string PartCode, int Count, string lotNo, object userState) {
            if ((this.MovLocWithLotOperationCompleted == null)) {
                this.MovLocWithLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMovLocWithLotOperationCompleted);
            }
            this.InvokeAsync("MovLocWithLot", new object[] {
                        LoginName,
                        LoginTime,
                        OldLoc,
                        NewLoc,
                        PartCode,
                        Count,
                        lotNo}, this.MovLocWithLotOperationCompleted, userState);
        }
        
        private void OnMovLocWithLotOperationCompleted(object arg) {
            if ((this.MovLocWithLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MovLocWithLotCompleted(this, new MovLocWithLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MovePickLoc1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MovePickLoc1(string LoginName, string LoginTime, double vpaId, int Count, string NewLoc, string userId, out string Mess, out string ErrType, out double updateQty) {
            object[] results = this.Invoke("MovePickLoc1", new object[] {
                        LoginName,
                        LoginTime,
                        vpaId,
                        Count,
                        NewLoc,
                        userId});
            Mess = ((string)(results[1]));
            ErrType = ((string)(results[2]));
            updateQty = ((double)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MovePickLoc1Async(string LoginName, string LoginTime, double vpaId, int Count, string NewLoc, string userId) {
            this.MovePickLoc1Async(LoginName, LoginTime, vpaId, Count, NewLoc, userId, null);
        }
        
        /// <remarks/>
        public void MovePickLoc1Async(string LoginName, string LoginTime, double vpaId, int Count, string NewLoc, string userId, object userState) {
            if ((this.MovePickLoc1OperationCompleted == null)) {
                this.MovePickLoc1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMovePickLoc1OperationCompleted);
            }
            this.InvokeAsync("MovePickLoc1", new object[] {
                        LoginName,
                        LoginTime,
                        vpaId,
                        Count,
                        NewLoc,
                        userId}, this.MovePickLoc1OperationCompleted, userState);
        }
        
        private void OnMovePickLoc1OperationCompleted(object arg) {
            if ((this.MovePickLoc1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MovePickLoc1Completed(this, new MovePickLoc1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Checked", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Checked(string orderNumber, string userName, double userId, double batchId) {
            object[] results = this.Invoke("Checked", new object[] {
                        orderNumber,
                        userName,
                        userId,
                        batchId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckedAsync(string orderNumber, string userName, double userId, double batchId) {
            this.CheckedAsync(orderNumber, userName, userId, batchId, null);
        }
        
        /// <remarks/>
        public void CheckedAsync(string orderNumber, string userName, double userId, double batchId, object userState) {
            if ((this.CheckedOperationCompleted == null)) {
                this.CheckedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckedOperationCompleted);
            }
            this.InvokeAsync("Checked", new object[] {
                        orderNumber,
                        userName,
                        userId,
                        batchId}, this.CheckedOperationCompleted, userState);
        }
        
        private void OnCheckedOperationCompleted(object arg) {
            if ((this.CheckedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckedCompleted(this, new CheckedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStatus(string OrderNumber) {
            object[] results = this.Invoke("UpdateStatus", new object[] {
                        OrderNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStatusAsync(string OrderNumber) {
            this.UpdateStatusAsync(OrderNumber, null);
        }
        
        /// <remarks/>
        public void UpdateStatusAsync(string OrderNumber, object userState) {
            if ((this.UpdateStatusOperationCompleted == null)) {
                this.UpdateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateStatus", new object[] {
                        OrderNumber}, this.UpdateStatusOperationCompleted, userState);
        }
        
        private void OnUpdateStatusOperationCompleted(object arg) {
            if ((this.UpdateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatusCompleted(this, new UpdateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryByLocId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryByLocId(string LocCode) {
            object[] results = this.Invoke("QueryByLocId", new object[] {
                        LocCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryByLocIdAsync(string LocCode) {
            this.QueryByLocIdAsync(LocCode, null);
        }
        
        /// <remarks/>
        public void QueryByLocIdAsync(string LocCode, object userState) {
            if ((this.QueryByLocIdOperationCompleted == null)) {
                this.QueryByLocIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryByLocIdOperationCompleted);
            }
            this.InvokeAsync("QueryByLocId", new object[] {
                        LocCode}, this.QueryByLocIdOperationCompleted, userState);
        }
        
        private void OnQueryByLocIdOperationCompleted(object arg) {
            if ((this.QueryByLocIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryByLocIdCompleted(this, new QueryByLocIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPlanCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryPlanCheck(string checkCredence, string login_name, double UserId) {
            object[] results = this.Invoke("QueryPlanCheck", new object[] {
                        checkCredence,
                        login_name,
                        UserId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPlanCheckAsync(string checkCredence, string login_name, double UserId) {
            this.QueryPlanCheckAsync(checkCredence, login_name, UserId, null);
        }
        
        /// <remarks/>
        public void QueryPlanCheckAsync(string checkCredence, string login_name, double UserId, object userState) {
            if ((this.QueryPlanCheckOperationCompleted == null)) {
                this.QueryPlanCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPlanCheckOperationCompleted);
            }
            this.InvokeAsync("QueryPlanCheck", new object[] {
                        checkCredence,
                        login_name,
                        UserId}, this.QueryPlanCheckOperationCompleted, userState);
        }
        
        private void OnQueryPlanCheckOperationCompleted(object arg) {
            if ((this.QueryPlanCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPlanCheckCompleted(this, new QueryPlanCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCheckDetailStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCheckDetailStatus(double id, double User_id, double qty, string state) {
            object[] results = this.Invoke("UpdateCheckDetailStatus", new object[] {
                        id,
                        User_id,
                        qty,
                        state});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCheckDetailStatusAsync(double id, double User_id, double qty, string state) {
            this.UpdateCheckDetailStatusAsync(id, User_id, qty, state, null);
        }
        
        /// <remarks/>
        public void UpdateCheckDetailStatusAsync(double id, double User_id, double qty, string state, object userState) {
            if ((this.UpdateCheckDetailStatusOperationCompleted == null)) {
                this.UpdateCheckDetailStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCheckDetailStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateCheckDetailStatus", new object[] {
                        id,
                        User_id,
                        qty,
                        state}, this.UpdateCheckDetailStatusOperationCompleted, userState);
        }
        
        private void OnUpdateCheckDetailStatusOperationCompleted(object arg) {
            if ((this.UpdateCheckDetailStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCheckDetailStatusCompleted(this, new UpdateCheckDetailStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateChecStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateChecStatus(double id, double User_id, string state) {
            object[] results = this.Invoke("UpdateChecStatus", new object[] {
                        id,
                        User_id,
                        state});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateChecStatusAsync(double id, double User_id, string state) {
            this.UpdateChecStatusAsync(id, User_id, state, null);
        }
        
        /// <remarks/>
        public void UpdateChecStatusAsync(double id, double User_id, string state, object userState) {
            if ((this.UpdateChecStatusOperationCompleted == null)) {
                this.UpdateChecStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateChecStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateChecStatus", new object[] {
                        id,
                        User_id,
                        state}, this.UpdateChecStatusOperationCompleted, userState);
        }
        
        private void OnUpdateChecStatusOperationCompleted(object arg) {
            if ((this.UpdateChecStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateChecStatusCompleted(this, new UpdateChecStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryWareHouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryWareHouse(double id) {
            object[] results = this.Invoke("QueryWareHouse", new object[] {
                        id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryWareHouseAsync(double id) {
            this.QueryWareHouseAsync(id, null);
        }
        
        /// <remarks/>
        public void QueryWareHouseAsync(double id, object userState) {
            if ((this.QueryWareHouseOperationCompleted == null)) {
                this.QueryWareHouseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryWareHouseOperationCompleted);
            }
            this.InvokeAsync("QueryWareHouse", new object[] {
                        id}, this.QueryWareHouseOperationCompleted, userState);
        }
        
        private void OnQueryWareHouseOperationCompleted(object arg) {
            if ((this.QueryWareHouseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryWareHouseCompleted(this, new QueryWareHouseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetItem(string ItemCode) {
            object[] results = this.Invoke("GetItem", new object[] {
                        ItemCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemAsync(string ItemCode) {
            this.GetItemAsync(ItemCode, null);
        }
        
        /// <remarks/>
        public void GetItemAsync(string ItemCode, object userState) {
            if ((this.GetItemOperationCompleted == null)) {
                this.GetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemOperationCompleted);
            }
            this.InvokeAsync("GetItem", new object[] {
                        ItemCode}, this.GetItemOperationCompleted, userState);
        }
        
        private void OnGetItemOperationCompleted(object arg) {
            if ((this.GetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemCompleted(this, new GetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFreeCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertFreeCheck(double LocId, double ItemId, double qty, double userId) {
            object[] results = this.Invoke("InsertFreeCheck", new object[] {
                        LocId,
                        ItemId,
                        qty,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFreeCheckAsync(double LocId, double ItemId, double qty, double userId) {
            this.InsertFreeCheckAsync(LocId, ItemId, qty, userId, null);
        }
        
        /// <remarks/>
        public void InsertFreeCheckAsync(double LocId, double ItemId, double qty, double userId, object userState) {
            if ((this.InsertFreeCheckOperationCompleted == null)) {
                this.InsertFreeCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFreeCheckOperationCompleted);
            }
            this.InvokeAsync("InsertFreeCheck", new object[] {
                        LocId,
                        ItemId,
                        qty,
                        userId}, this.InsertFreeCheckOperationCompleted, userState);
        }
        
        private void OnInsertFreeCheckOperationCompleted(object arg) {
            if ((this.InsertFreeCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFreeCheckCompleted(this, new InsertFreeCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckLoc(string LoginName, string LoginTime, string OldLoc, string partCode, int Count, out string Mess) {
            object[] results = this.Invoke("CheckLoc", new object[] {
                        LoginName,
                        LoginTime,
                        OldLoc,
                        partCode,
                        Count});
            Mess = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLocAsync(string LoginName, string LoginTime, string OldLoc, string partCode, int Count) {
            this.CheckLocAsync(LoginName, LoginTime, OldLoc, partCode, Count, null);
        }
        
        /// <remarks/>
        public void CheckLocAsync(string LoginName, string LoginTime, string OldLoc, string partCode, int Count, object userState) {
            if ((this.CheckLocOperationCompleted == null)) {
                this.CheckLocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLocOperationCompleted);
            }
            this.InvokeAsync("CheckLoc", new object[] {
                        LoginName,
                        LoginTime,
                        OldLoc,
                        partCode,
                        Count}, this.CheckLocOperationCompleted, userState);
        }
        
        private void OnCheckLocOperationCompleted(object arg) {
            if ((this.CheckLocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLocCompleted(this, new CheckLocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadShipOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadShipOrder(string PickCode, string UserId, out string Mesg) {
            object[] results = this.Invoke("LoadShipOrder", new object[] {
                        PickCode,
                        UserId});
            Mesg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LoadShipOrderAsync(string PickCode, string UserId) {
            this.LoadShipOrderAsync(PickCode, UserId, null);
        }
        
        /// <remarks/>
        public void LoadShipOrderAsync(string PickCode, string UserId, object userState) {
            if ((this.LoadShipOrderOperationCompleted == null)) {
                this.LoadShipOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadShipOrderOperationCompleted);
            }
            this.InvokeAsync("LoadShipOrder", new object[] {
                        PickCode,
                        UserId}, this.LoadShipOrderOperationCompleted, userState);
        }
        
        private void OnLoadShipOrderOperationCompleted(object arg) {
            if ((this.LoadShipOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadShipOrderCompleted(this, new LoadShipOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckPackge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CheckPackge(string PackgCode) {
            object[] results = this.Invoke("CheckPackge", new object[] {
                        PackgCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPackgeAsync(string PackgCode) {
            this.CheckPackgeAsync(PackgCode, null);
        }
        
        /// <remarks/>
        public void CheckPackgeAsync(string PackgCode, object userState) {
            if ((this.CheckPackgeOperationCompleted == null)) {
                this.CheckPackgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPackgeOperationCompleted);
            }
            this.InvokeAsync("CheckPackge", new object[] {
                        PackgCode}, this.CheckPackgeOperationCompleted, userState);
        }
        
        private void OnCheckPackgeOperationCompleted(object arg) {
            if ((this.CheckPackgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPackgeCompleted(this, new CheckPackgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PackgeCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PackgeCount(string PickTickCode, string PackgCode, double PackgeId) {
            object[] results = this.Invoke("PackgeCount", new object[] {
                        PickTickCode,
                        PackgCode,
                        PackgeId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PackgeCountAsync(string PickTickCode, string PackgCode, double PackgeId) {
            this.PackgeCountAsync(PickTickCode, PackgCode, PackgeId, null);
        }
        
        /// <remarks/>
        public void PackgeCountAsync(string PickTickCode, string PackgCode, double PackgeId, object userState) {
            if ((this.PackgeCountOperationCompleted == null)) {
                this.PackgeCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPackgeCountOperationCompleted);
            }
            this.InvokeAsync("PackgeCount", new object[] {
                        PickTickCode,
                        PackgCode,
                        PackgeId}, this.PackgeCountOperationCompleted, userState);
        }
        
        private void OnPackgeCountOperationCompleted(object arg) {
            if ((this.PackgeCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PackgeCountCompleted(this, new PackgeCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OutShipment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool OutShipment(double PackgID, double UserId, double ItemId, double OutCount, double WhseId, string WhseCode, bool isNew, string PICK_TICKET_CODE, out string Mesg) {
            object[] results = this.Invoke("OutShipment", new object[] {
                        PackgID,
                        UserId,
                        ItemId,
                        OutCount,
                        WhseId,
                        WhseCode,
                        isNew,
                        PICK_TICKET_CODE});
            Mesg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OutShipmentAsync(double PackgID, double UserId, double ItemId, double OutCount, double WhseId, string WhseCode, bool isNew, string PICK_TICKET_CODE) {
            this.OutShipmentAsync(PackgID, UserId, ItemId, OutCount, WhseId, WhseCode, isNew, PICK_TICKET_CODE, null);
        }
        
        /// <remarks/>
        public void OutShipmentAsync(double PackgID, double UserId, double ItemId, double OutCount, double WhseId, string WhseCode, bool isNew, string PICK_TICKET_CODE, object userState) {
            if ((this.OutShipmentOperationCompleted == null)) {
                this.OutShipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOutShipmentOperationCompleted);
            }
            this.InvokeAsync("OutShipment", new object[] {
                        PackgID,
                        UserId,
                        ItemId,
                        OutCount,
                        WhseId,
                        WhseCode,
                        isNew,
                        PICK_TICKET_CODE}, this.OutShipmentOperationCompleted, userState);
        }
        
        private void OnOutShipmentOperationCompleted(object arg) {
            if ((this.OutShipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OutShipmentCompleted(this, new OutShipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPackege", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryPackege(string barcode, string ItemCode) {
            object[] results = this.Invoke("QueryPackege", new object[] {
                        barcode,
                        ItemCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPackegeAsync(string barcode, string ItemCode) {
            this.QueryPackegeAsync(barcode, ItemCode, null);
        }
        
        /// <remarks/>
        public void QueryPackegeAsync(string barcode, string ItemCode, object userState) {
            if ((this.QueryPackegeOperationCompleted == null)) {
                this.QueryPackegeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPackegeOperationCompleted);
            }
            this.InvokeAsync("QueryPackege", new object[] {
                        barcode,
                        ItemCode}, this.QueryPackegeOperationCompleted, userState);
        }
        
        private void OnQueryPackegeOperationCompleted(object arg) {
            if ((this.QueryPackegeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPackegeCompleted(this, new QueryPackegeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPackegeOn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryPackegeOn(string barcode, string ItemCode) {
            object[] results = this.Invoke("QueryPackegeOn", new object[] {
                        barcode,
                        ItemCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPackegeOnAsync(string barcode, string ItemCode) {
            this.QueryPackegeOnAsync(barcode, ItemCode, null);
        }
        
        /// <remarks/>
        public void QueryPackegeOnAsync(string barcode, string ItemCode, object userState) {
            if ((this.QueryPackegeOnOperationCompleted == null)) {
                this.QueryPackegeOnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPackegeOnOperationCompleted);
            }
            this.InvokeAsync("QueryPackegeOn", new object[] {
                        barcode,
                        ItemCode}, this.QueryPackegeOnOperationCompleted, userState);
        }
        
        private void OnQueryPackegeOnOperationCompleted(object arg) {
            if ((this.QueryPackegeOnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPackegeOnCompleted(this, new QueryPackegeOnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePackege", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePackege(double id, double PackegeId, double qty, double OldQty, double ticketDetaiId, double userId, string partCode, string oldPackege, string pick_ticket_code, out double BianQty, out double OldQty1) {
            object[] results = this.Invoke("UpdatePackege", new object[] {
                        id,
                        PackegeId,
                        qty,
                        OldQty,
                        ticketDetaiId,
                        userId,
                        partCode,
                        oldPackege,
                        pick_ticket_code});
            BianQty = ((double)(results[1]));
            OldQty1 = ((double)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePackegeAsync(double id, double PackegeId, double qty, double OldQty, double ticketDetaiId, double userId, string partCode, string oldPackege, string pick_ticket_code) {
            this.UpdatePackegeAsync(id, PackegeId, qty, OldQty, ticketDetaiId, userId, partCode, oldPackege, pick_ticket_code, null);
        }
        
        /// <remarks/>
        public void UpdatePackegeAsync(double id, double PackegeId, double qty, double OldQty, double ticketDetaiId, double userId, string partCode, string oldPackege, string pick_ticket_code, object userState) {
            if ((this.UpdatePackegeOperationCompleted == null)) {
                this.UpdatePackegeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePackegeOperationCompleted);
            }
            this.InvokeAsync("UpdatePackege", new object[] {
                        id,
                        PackegeId,
                        qty,
                        OldQty,
                        ticketDetaiId,
                        userId,
                        partCode,
                        oldPackege,
                        pick_ticket_code}, this.UpdatePackegeOperationCompleted, userState);
        }
        
        private void OnUpdatePackegeOperationCompleted(object arg) {
            if ((this.UpdatePackegeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePackegeCompleted(this, new UpdatePackegeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectOrderPartInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectOrderPartInfo(int UserID, string item_code) {
            object[] results = this.Invoke("SelectOrderPartInfo", new object[] {
                        UserID,
                        item_code});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectOrderPartInfoAsync(int UserID, string item_code) {
            this.SelectOrderPartInfoAsync(UserID, item_code, null);
        }
        
        /// <remarks/>
        public void SelectOrderPartInfoAsync(int UserID, string item_code, object userState) {
            if ((this.SelectOrderPartInfoOperationCompleted == null)) {
                this.SelectOrderPartInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOrderPartInfoOperationCompleted);
            }
            this.InvokeAsync("SelectOrderPartInfo", new object[] {
                        UserID,
                        item_code}, this.SelectOrderPartInfoOperationCompleted, userState);
        }
        
        private void OnSelectOrderPartInfoOperationCompleted(object arg) {
            if ((this.SelectOrderPartInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectOrderPartInfoCompleted(this, new SelectOrderPartInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetFile(string packageNo) {
            object[] results = this.Invoke("GetFile", new object[] {
                        packageNo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileAsync(string packageNo) {
            this.GetFileAsync(packageNo, null);
        }
        
        /// <remarks/>
        public void GetFileAsync(string packageNo, object userState) {
            if ((this.GetFileOperationCompleted == null)) {
                this.GetFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileOperationCompleted);
            }
            this.InvokeAsync("GetFile", new object[] {
                        packageNo}, this.GetFileOperationCompleted, userState);
        }
        
        private void OnGetFileOperationCompleted(object arg) {
            if ((this.GetFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileCompleted(this, new GetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLotByItemLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLotByItemLoc(string itemCode, string locCode) {
            object[] results = this.Invoke("GetLotByItemLoc", new object[] {
                        itemCode,
                        locCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLotByItemLocAsync(string itemCode, string locCode) {
            this.GetLotByItemLocAsync(itemCode, locCode, null);
        }
        
        /// <remarks/>
        public void GetLotByItemLocAsync(string itemCode, string locCode, object userState) {
            if ((this.GetLotByItemLocOperationCompleted == null)) {
                this.GetLotByItemLocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLotByItemLocOperationCompleted);
            }
            this.InvokeAsync("GetLotByItemLoc", new object[] {
                        itemCode,
                        locCode}, this.GetLotByItemLocOperationCompleted, userState);
        }
        
        private void OnGetLotByItemLocOperationCompleted(object arg) {
            if ((this.GetLotByItemLocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLotByItemLocCompleted(this, new GetLotByItemLocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfoByPartCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInfoByPartCode(string Item_Code, string User_ID) {
            object[] results = this.Invoke("GetInfoByPartCode", new object[] {
                        Item_Code,
                        User_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoByPartCodeAsync(string Item_Code, string User_ID) {
            this.GetInfoByPartCodeAsync(Item_Code, User_ID, null);
        }
        
        /// <remarks/>
        public void GetInfoByPartCodeAsync(string Item_Code, string User_ID, object userState) {
            if ((this.GetInfoByPartCodeOperationCompleted == null)) {
                this.GetInfoByPartCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoByPartCodeOperationCompleted);
            }
            this.InvokeAsync("GetInfoByPartCode", new object[] {
                        Item_Code,
                        User_ID}, this.GetInfoByPartCodeOperationCompleted, userState);
        }
        
        private void OnGetInfoByPartCodeOperationCompleted(object arg) {
            if ((this.GetInfoByPartCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoByPartCodeCompleted(this, new GetInfoByPartCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfoByPartCodeMloc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInfoByPartCodeMloc(string Item_Code, string User_ID) {
            object[] results = this.Invoke("GetInfoByPartCodeMloc", new object[] {
                        Item_Code,
                        User_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoByPartCodeMlocAsync(string Item_Code, string User_ID) {
            this.GetInfoByPartCodeMlocAsync(Item_Code, User_ID, null);
        }
        
        /// <remarks/>
        public void GetInfoByPartCodeMlocAsync(string Item_Code, string User_ID, object userState) {
            if ((this.GetInfoByPartCodeMlocOperationCompleted == null)) {
                this.GetInfoByPartCodeMlocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoByPartCodeMlocOperationCompleted);
            }
            this.InvokeAsync("GetInfoByPartCodeMloc", new object[] {
                        Item_Code,
                        User_ID}, this.GetInfoByPartCodeMlocOperationCompleted, userState);
        }
        
        private void OnGetInfoByPartCodeMlocOperationCompleted(object arg) {
            if ((this.GetInfoByPartCodeMlocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoByPartCodeMlocCompleted(this, new GetInfoByPartCodeMlocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAddedDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveAddedDetail(string Item_Code, double InCount, string Item_Loc, string IsLoc, string User_ID, out string Msg) {
            object[] results = this.Invoke("SaveAddedDetail", new object[] {
                        Item_Code,
                        InCount,
                        Item_Loc,
                        IsLoc,
                        User_ID});
            Msg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAddedDetailAsync(string Item_Code, double InCount, string Item_Loc, string IsLoc, string User_ID) {
            this.SaveAddedDetailAsync(Item_Code, InCount, Item_Loc, IsLoc, User_ID, null);
        }
        
        /// <remarks/>
        public void SaveAddedDetailAsync(string Item_Code, double InCount, string Item_Loc, string IsLoc, string User_ID, object userState) {
            if ((this.SaveAddedDetailOperationCompleted == null)) {
                this.SaveAddedDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAddedDetailOperationCompleted);
            }
            this.InvokeAsync("SaveAddedDetail", new object[] {
                        Item_Code,
                        InCount,
                        Item_Loc,
                        IsLoc,
                        User_ID}, this.SaveAddedDetailOperationCompleted, userState);
        }
        
        private void OnSaveAddedDetailOperationCompleted(object arg) {
            if ((this.SaveAddedDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAddedDetailCompleted(this, new SaveAddedDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryMovePlan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryMovePlan() {
            object[] results = this.Invoke("QueryMovePlan", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMovePlanAsync() {
            this.QueryMovePlanAsync(null);
        }
        
        /// <remarks/>
        public void QueryMovePlanAsync(object userState) {
            if ((this.QueryMovePlanOperationCompleted == null)) {
                this.QueryMovePlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMovePlanOperationCompleted);
            }
            this.InvokeAsync("QueryMovePlan", new object[0], this.QueryMovePlanOperationCompleted, userState);
        }
        
        private void OnQueryMovePlanOperationCompleted(object arg) {
            if ((this.QueryMovePlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMovePlanCompleted(this, new QueryMovePlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryMovePlanDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryMovePlanDetail(int detailId) {
            object[] results = this.Invoke("QueryMovePlanDetail", new object[] {
                        detailId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMovePlanDetailAsync(int detailId) {
            this.QueryMovePlanDetailAsync(detailId, null);
        }
        
        /// <remarks/>
        public void QueryMovePlanDetailAsync(int detailId, object userState) {
            if ((this.QueryMovePlanDetailOperationCompleted == null)) {
                this.QueryMovePlanDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMovePlanDetailOperationCompleted);
            }
            this.InvokeAsync("QueryMovePlanDetail", new object[] {
                        detailId}, this.QueryMovePlanDetailOperationCompleted, userState);
        }
        
        private void OnQueryMovePlanDetailOperationCompleted(object arg) {
            if ((this.QueryMovePlanDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMovePlanDetailCompleted(this, new QueryMovePlanDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryMovePlanDetailByPlanNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryMovePlanDetailByPlanNo(string PlanNO) {
            object[] results = this.Invoke("QueryMovePlanDetailByPlanNo", new object[] {
                        PlanNO});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMovePlanDetailByPlanNoAsync(string PlanNO) {
            this.QueryMovePlanDetailByPlanNoAsync(PlanNO, null);
        }
        
        /// <remarks/>
        public void QueryMovePlanDetailByPlanNoAsync(string PlanNO, object userState) {
            if ((this.QueryMovePlanDetailByPlanNoOperationCompleted == null)) {
                this.QueryMovePlanDetailByPlanNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMovePlanDetailByPlanNoOperationCompleted);
            }
            this.InvokeAsync("QueryMovePlanDetailByPlanNo", new object[] {
                        PlanNO}, this.QueryMovePlanDetailByPlanNoOperationCompleted, userState);
        }
        
        private void OnQueryMovePlanDetailByPlanNoOperationCompleted(object arg) {
            if ((this.QueryMovePlanDetailByPlanNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMovePlanDetailByPlanNoCompleted(this, new QueryMovePlanDetailByPlanNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmPlanMove", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConfirmPlanMove(int planId, int detailId, int stockId, int locId, int targetId, int moveQty, string LoginName, string LoginTime, int userId, out string Mess, out string ErrType) {
            object[] results = this.Invoke("ConfirmPlanMove", new object[] {
                        planId,
                        detailId,
                        stockId,
                        locId,
                        targetId,
                        moveQty,
                        LoginName,
                        LoginTime,
                        userId});
            Mess = ((string)(results[1]));
            ErrType = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmPlanMoveAsync(int planId, int detailId, int stockId, int locId, int targetId, int moveQty, string LoginName, string LoginTime, int userId) {
            this.ConfirmPlanMoveAsync(planId, detailId, stockId, locId, targetId, moveQty, LoginName, LoginTime, userId, null);
        }
        
        /// <remarks/>
        public void ConfirmPlanMoveAsync(int planId, int detailId, int stockId, int locId, int targetId, int moveQty, string LoginName, string LoginTime, int userId, object userState) {
            if ((this.ConfirmPlanMoveOperationCompleted == null)) {
                this.ConfirmPlanMoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPlanMoveOperationCompleted);
            }
            this.InvokeAsync("ConfirmPlanMove", new object[] {
                        planId,
                        detailId,
                        stockId,
                        locId,
                        targetId,
                        moveQty,
                        LoginName,
                        LoginTime,
                        userId}, this.ConfirmPlanMoveOperationCompleted, userState);
        }
        
        private void OnConfirmPlanMoveOperationCompleted(object arg) {
            if ((this.ConfirmPlanMoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPlanMoveCompleted(this, new ConfirmPlanMoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveOrderAutoPrintInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveOrderAutoPrintInfo(string OrderNo, string UserId) {
            object[] results = this.Invoke("SaveOrderAutoPrintInfo", new object[] {
                        OrderNo,
                        UserId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveOrderAutoPrintInfoAsync(string OrderNo, string UserId) {
            this.SaveOrderAutoPrintInfoAsync(OrderNo, UserId, null);
        }
        
        /// <remarks/>
        public void SaveOrderAutoPrintInfoAsync(string OrderNo, string UserId, object userState) {
            if ((this.SaveOrderAutoPrintInfoOperationCompleted == null)) {
                this.SaveOrderAutoPrintInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOrderAutoPrintInfoOperationCompleted);
            }
            this.InvokeAsync("SaveOrderAutoPrintInfo", new object[] {
                        OrderNo,
                        UserId}, this.SaveOrderAutoPrintInfoOperationCompleted, userState);
        }
        
        private void OnSaveOrderAutoPrintInfoOperationCompleted(object arg) {
            if ((this.SaveOrderAutoPrintInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveOrderAutoPrintInfoCompleted(this, new SaveOrderAutoPrintInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class VPhrSecUsr : BaseEntityOfVPhrSecUsr {
        
        private System.Nullable<double> idField;
        
        private System.Nullable<double> iS_DISABLEDField;
        
        private System.Nullable<double> iS_SYSTEMField;
        
        private string lOGIN_NAMEField;
        
        private string eNCRYPTED_PASSWORDField;
        
        private string fIRST_NAMEField;
        
        private string lAST_NAMEField;
        
        private System.Nullable<System.DateTime> bIRTHDAYField;
        
        private System.Nullable<double> iS_FEMALEField;
        
        private System.Nullable<double> cOMPANY_IDField;
        
        private string eMAILField;
        
        private string dESCRIPTIONField;
        
        private System.Nullable<double> lOGIN_COUNTField;
        
        private System.Nullable<System.DateTime> dISABLED_TIMEField;
        
        private System.Nullable<System.DateTime> cREATED_TIMEField;
        
        private System.Nullable<System.DateTime> lAST_LOGINField;
        
        private System.Nullable<System.DateTime> lAST_MODIFIEDField;
        
        private string eXTEND_COLUMN_0Field;
        
        private string eXTEND_COLUMN_1Field;
        
        private string eXTEND_COLUMN_2Field;
        
        private string eXTEND_COLUMN_3Field;
        
        private string eXTEND_COLUMN_4Field;
        
        private string eXTEND_COLUMN_5Field;
        
        private string eXTEND_COLUMN_6Field;
        
        private string eXTEND_COLUMN_7Field;
        
        private string eXTEND_COLUMN_8Field;
        
        private string eXTEND_COLUMN_9Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> IS_DISABLED {
            get {
                return this.iS_DISABLEDField;
            }
            set {
                this.iS_DISABLEDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> IS_SYSTEM {
            get {
                return this.iS_SYSTEMField;
            }
            set {
                this.iS_SYSTEMField = value;
            }
        }
        
        /// <remarks/>
        public string LOGIN_NAME {
            get {
                return this.lOGIN_NAMEField;
            }
            set {
                this.lOGIN_NAMEField = value;
            }
        }
        
        /// <remarks/>
        public string ENCRYPTED_PASSWORD {
            get {
                return this.eNCRYPTED_PASSWORDField;
            }
            set {
                this.eNCRYPTED_PASSWORDField = value;
            }
        }
        
        /// <remarks/>
        public string FIRST_NAME {
            get {
                return this.fIRST_NAMEField;
            }
            set {
                this.fIRST_NAMEField = value;
            }
        }
        
        /// <remarks/>
        public string LAST_NAME {
            get {
                return this.lAST_NAMEField;
            }
            set {
                this.lAST_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BIRTHDAY {
            get {
                return this.bIRTHDAYField;
            }
            set {
                this.bIRTHDAYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> IS_FEMALE {
            get {
                return this.iS_FEMALEField;
            }
            set {
                this.iS_FEMALEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> COMPANY_ID {
            get {
                return this.cOMPANY_IDField;
            }
            set {
                this.cOMPANY_IDField = value;
            }
        }
        
        /// <remarks/>
        public string EMAIL {
            get {
                return this.eMAILField;
            }
            set {
                this.eMAILField = value;
            }
        }
        
        /// <remarks/>
        public string DESCRIPTION {
            get {
                return this.dESCRIPTIONField;
            }
            set {
                this.dESCRIPTIONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> LOGIN_COUNT {
            get {
                return this.lOGIN_COUNTField;
            }
            set {
                this.lOGIN_COUNTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DISABLED_TIME {
            get {
                return this.dISABLED_TIMEField;
            }
            set {
                this.dISABLED_TIMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CREATED_TIME {
            get {
                return this.cREATED_TIMEField;
            }
            set {
                this.cREATED_TIMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LAST_LOGIN {
            get {
                return this.lAST_LOGINField;
            }
            set {
                this.lAST_LOGINField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LAST_MODIFIED {
            get {
                return this.lAST_MODIFIEDField;
            }
            set {
                this.lAST_MODIFIEDField = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_0 {
            get {
                return this.eXTEND_COLUMN_0Field;
            }
            set {
                this.eXTEND_COLUMN_0Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_1 {
            get {
                return this.eXTEND_COLUMN_1Field;
            }
            set {
                this.eXTEND_COLUMN_1Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_2 {
            get {
                return this.eXTEND_COLUMN_2Field;
            }
            set {
                this.eXTEND_COLUMN_2Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_3 {
            get {
                return this.eXTEND_COLUMN_3Field;
            }
            set {
                this.eXTEND_COLUMN_3Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_4 {
            get {
                return this.eXTEND_COLUMN_4Field;
            }
            set {
                this.eXTEND_COLUMN_4Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_5 {
            get {
                return this.eXTEND_COLUMN_5Field;
            }
            set {
                this.eXTEND_COLUMN_5Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_6 {
            get {
                return this.eXTEND_COLUMN_6Field;
            }
            set {
                this.eXTEND_COLUMN_6Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_7 {
            get {
                return this.eXTEND_COLUMN_7Field;
            }
            set {
                this.eXTEND_COLUMN_7Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_8 {
            get {
                return this.eXTEND_COLUMN_8Field;
            }
            set {
                this.eXTEND_COLUMN_8Field = value;
            }
        }
        
        /// <remarks/>
        public string EXTEND_COLUMN_9 {
            get {
                return this.eXTEND_COLUMN_9Field;
            }
            set {
                this.eXTEND_COLUMN_9Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VPhrSecUsr))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseEntityOfVPhrSecUsr {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LocItem))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseEntityOfLocItem {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LocItem : BaseEntityOfLocItem {
        
        private System.Nullable<double> idField;
        
        private string lOC_CODEField;
        
        private System.Nullable<double> uID_IDField;
        
        private string iTEM_CODEField;
        
        private System.Nullable<double> qTYField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string LOC_CODE {
            get {
                return this.lOC_CODEField;
            }
            set {
                this.lOC_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> UID_ID {
            get {
                return this.uID_IDField;
            }
            set {
                this.uID_IDField = value;
            }
        }
        
        /// <remarks/>
        public string ITEM_CODE {
            get {
                return this.iTEM_CODEField;
            }
            set {
                this.iTEM_CODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> QTY {
            get {
                return this.qTYField;
            }
            set {
                this.qTYField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VPhrSecUsr Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VPhrSecUsr)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserAllCompletedEventHandler(object sender, GetUserAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetRcvDocCompletedEventHandler(object sender, GetRcvDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRcvDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRcvDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPickDocCompletedEventHandler(object sender, GetPickDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPickDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPickDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserOrderCompletedEventHandler(object sender, GetUserOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoadMainDocByStatusCompletedEventHandler(object sender, LoadMainDocByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMainDocByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMainDocByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdatePQStatusByCloseCompletedEventHandler(object sender, UpdatePQStatusByCloseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePQStatusByCloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePQStatusByCloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoadMainDocCompletedEventHandler(object sender, LoadMainDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMainDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMainDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveOrderDetailCompletedEventHandler(object sender, SaveOrderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveOrderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveOrderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string OutMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoadMainDocRVCompletedEventHandler(object sender, LoadMainDocRVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMainDocRVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMainDocRVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveAllReceivingRVCompletedEventHandler(object sender, SaveAllReceivingRVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAllReceivingRVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAllReceivingRVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string OutMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveAllReceivingPQCompletedEventHandler(object sender, SaveAllReceivingPQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAllReceivingPQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAllReceivingPQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string OutMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SelectReceivingStatusCompletedEventHandler(object sender, SelectReceivingStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectReceivingStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectReceivingStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveOrderMainCompletedEventHandler(object sender, SaveOrderMainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveOrderMainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveOrderMainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateUserStateCompletedEventHandler(object sender, UpdateUserStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsUserLoginOtherDeviceCompletedEventHandler(object sender, IsUserLoginOtherDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserLoginOtherDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserLoginOtherDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdatePwdCompletedEventHandler(object sender, UpdatePwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Mess {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SelectNullLocCompletedEventHandler(object sender, SelectNullLocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectNullLocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectNullLocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SelectOrderCompletedEventHandler(object sender, SelectOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SelectOrderBoxListCompletedEventHandler(object sender, SelectOrderBoxListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectOrderBoxListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectOrderBoxListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SelectOrderBoxInfoCompletedEventHandler(object sender, SelectOrderBoxInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectOrderBoxInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectOrderBoxInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SelectOrderByCompletedEventHandler(object sender, SelectOrderByCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectOrderByCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectOrderByCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateQtyCompletedEventHandler(object sender, UpdateQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryLocItemCompletedEventHandler(object sender, QueryLocItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryLocItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryLocItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryPartQtyCompletedEventHandler(object sender, QueryPartQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPartQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPartQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryDetailByIdCompletedEventHandler(object sender, QueryDetailByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDetailByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDetailByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdatePickQueueActStatusCompletedEventHandler(object sender, UpdatePickQueueActStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePickQueueActStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePickQueueActStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdatePickBatchStatusCompletedEventHandler(object sender, UpdatePickBatchStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePickBatchStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePickBatchStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MovLocCompletedEventHandler(object sender, MovLocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MovLocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MovLocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Mess {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ErrType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MovLocWithLotCompletedEventHandler(object sender, MovLocWithLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MovLocWithLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MovLocWithLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Mess {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ErrType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MovePickLoc1CompletedEventHandler(object sender, MovePickLoc1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MovePickLoc1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MovePickLoc1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Mess {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ErrType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public double updateQty {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckedCompletedEventHandler(object sender, CheckedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateStatusCompletedEventHandler(object sender, UpdateStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryByLocIdCompletedEventHandler(object sender, QueryByLocIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryByLocIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryByLocIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryPlanCheckCompletedEventHandler(object sender, QueryPlanCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPlanCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPlanCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateCheckDetailStatusCompletedEventHandler(object sender, UpdateCheckDetailStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCheckDetailStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCheckDetailStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateChecStatusCompletedEventHandler(object sender, UpdateChecStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateChecStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateChecStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryWareHouseCompletedEventHandler(object sender, QueryWareHouseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryWareHouseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryWareHouseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetItemCompletedEventHandler(object sender, GetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertFreeCheckCompletedEventHandler(object sender, InsertFreeCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFreeCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFreeCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckLocCompletedEventHandler(object sender, CheckLocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Mess {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoadShipOrderCompletedEventHandler(object sender, LoadShipOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadShipOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadShipOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Mesg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckPackgeCompletedEventHandler(object sender, CheckPackgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPackgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPackgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PackgeCountCompletedEventHandler(object sender, PackgeCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackgeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PackgeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void OutShipmentCompletedEventHandler(object sender, OutShipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OutShipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OutShipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Mesg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryPackegeCompletedEventHandler(object sender, QueryPackegeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPackegeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPackegeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryPackegeOnCompletedEventHandler(object sender, QueryPackegeOnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPackegeOnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPackegeOnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdatePackegeCompletedEventHandler(object sender, UpdatePackegeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePackegeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePackegeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public double BianQty {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public double OldQty1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SelectOrderPartInfoCompletedEventHandler(object sender, SelectOrderPartInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectOrderPartInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectOrderPartInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFileCompletedEventHandler(object sender, GetFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLotByItemLocCompletedEventHandler(object sender, GetLotByItemLocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLotByItemLocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLotByItemLocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInfoByPartCodeCompletedEventHandler(object sender, GetInfoByPartCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoByPartCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoByPartCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInfoByPartCodeMlocCompletedEventHandler(object sender, GetInfoByPartCodeMlocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoByPartCodeMlocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoByPartCodeMlocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveAddedDetailCompletedEventHandler(object sender, SaveAddedDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAddedDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAddedDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryMovePlanCompletedEventHandler(object sender, QueryMovePlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMovePlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMovePlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryMovePlanDetailCompletedEventHandler(object sender, QueryMovePlanDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMovePlanDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMovePlanDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryMovePlanDetailByPlanNoCompletedEventHandler(object sender, QueryMovePlanDetailByPlanNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMovePlanDetailByPlanNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMovePlanDetailByPlanNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ConfirmPlanMoveCompletedEventHandler(object sender, ConfirmPlanMoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmPlanMoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmPlanMoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Mess {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ErrType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveOrderAutoPrintInfoCompletedEventHandler(object sender, SaveOrderAutoPrintInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveOrderAutoPrintInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveOrderAutoPrintInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591